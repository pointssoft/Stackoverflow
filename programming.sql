-- phpMyAdmin SQL Dump
-- version 5.1.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Jul 04, 2022 at 07:49 PM
-- Server version: 10.4.18-MariaDB
-- PHP Version: 7.3.27

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `programming`
--

-- --------------------------------------------------------

--
-- Table structure for table `answers`
--

CREATE TABLE `answers` (
  `id` int(11) NOT NULL,
  `text` varchar(1000) NOT NULL,
  `vote` int(5) DEFAULT 0,
  `accept` int(1) DEFAULT NULL,
  `autho_name` varchar(50) DEFAULT NULL,
  `author_url` varchar(100) DEFAULT NULL,
  `source` varchar(255) DEFAULT NULL,
  `question_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`id`, `text`, `vote`, `accept`, `autho_name`, `author_url`, `source`, `question_id`) VALUES
(1, 'text', 32, NULL, 'ecatmur', '/users/567292/ecatmur', 'stackoverflow', 1),
(2, 'text', 21, NULL, 'Crazyshezy', '/users/379054/crazyshezy', 'stackoverflow', 2),
(3, 'text', 3, NULL, 'Antony Hatchkins', '/users/237105/antony-hatchkins', 'stackoverflow', 2),
(4, 'text', 1787, NULL, 'BrenBarn', '/users/1427416/brenbarn', 'stackoverflow', 3),
(5, 'text', 76, NULL, 'Rami Ka.', '/users/9549366/rami-ka', 'stackoverflow', 3),
(6, 'text', 13, NULL, 'Steve L', '/users/32584/steve-l', 'stackoverflow', 3),
(7, 'text', 11, NULL, 'Smit Johnth', '/users/2112218/smit-johnth', 'stackoverflow', 3),
(8, 'text', 10, NULL, 'torek', '/users/1256452/torek', 'stackoverflow', 3),
(9, 'text', 6, NULL, 'Federico', '/users/299421/federico', 'stackoverflow', 3),
(10, 'text', 3, NULL, 'Brad Dre', '/users/4228110/brad-dre', 'stackoverflow', 3),
(11, 'text', 1, NULL, 'Lars', '/users/6321929/lars', 'stackoverflow', 3),
(12, 'text', 1, NULL, 'theodox', '/users/1936075/theodox', 'stackoverflow', 3),
(13, 'text', 1, NULL, 'Ronny', '/users/19322455/ronny', 'stackoverflow', 3),
(14, 'text', 0, NULL, 'ec2604', '/users/9405022/ec2604', 'stackoverflow', 3),
(15, 'text', -1, NULL, 'Ark-kun', '/users/1497385/ark-kun', 'stackoverflow', 3),
(16, 'text', 4, NULL, 'Lennart Regebro', '/users/126214/lennart-regebro', 'stackoverflow', 4),
(17, 'text', 0, NULL, 'Matt', '/users/152246/matt', 'stackoverflow', 4),
(18, 'text', 22, NULL, 'icyrock.com', '/users/438544/icyrock-com', 'stackoverflow', 5),
(19, 'text', 253, NULL, 'Multihunter', '/users/4082104/multihunter', 'stackoverflow', 6),
(20, 'text', 241, NULL, 'Jenish', '/users/7271298/jenish', 'stackoverflow', 6),
(21, 'text', 56, NULL, 'User', '/users/1320237/user', 'stackoverflow', 6),
(22, 'text', 43, NULL, 'Jason DeMorrow', '/users/3891760/jason-demorrow', 'stackoverflow', 6),
(23, 'text', 29, NULL, 'Guzman Ojero', '/users/6710903/guzman-ojero', 'stackoverflow', 6),
(24, 'text', 21, NULL, 'Joe Zhow', '/users/6150733/joe-zhow', 'stackoverflow', 6),
(25, 'text', 15, NULL, 'dlamblin', '/users/459/dlamblin', 'stackoverflow', 6),
(26, 'text', 8, NULL, 'Mierpo', '/users/8467569/mierpo', 'stackoverflow', 6),
(27, 'text', 5, NULL, 'pelos', '/users/1704282/pelos', 'stackoverflow', 6),
(28, 'text', 5, NULL, 'Chris Collett', '/users/10792235/chris-collett', 'stackoverflow', 6),
(29, 'text', 4, NULL, 'Jerome', '/users/4593553/jerome', 'stackoverflow', 6),
(30, 'text', 1, NULL, 'Jimm Chen', '/users/151453/jimm-chen', 'stackoverflow', 6),
(31, 'text', 0, NULL, 'Andre de Miranda', '/users/888876/andre-de-miranda', 'stackoverflow', 6),
(32, 'text', 0, NULL, 'Rex Mudanya', '/users/8230893/rex-mudanya', 'stackoverflow', 6),
(33, 'text', 0, NULL, 'Frederico Fiuza', '/users/6054433/frederico-fiuza', 'stackoverflow', 6),
(34, 'text', 3, NULL, 'Senthil Kumaran', '/users/18852/senthil-kumaran', 'stackoverflow', 8),
(35, 'text', 1, NULL, 'embert', '/users/1797098/embert', 'stackoverflow', 9),
(36, 'text', 1, NULL, 'Rishi', '/users/3288262/rishi', 'stackoverflow', 9),
(37, 'text', 1003, NULL, 'Aya', '/users/172176/aya', 'stackoverflow', 11),
(38, 'text', 516, NULL, 'vaultah', '/users/2301450/vaultah', 'stackoverflow', 11),
(39, 'text', 226, NULL, 'am5', '/users/4521562/am5', 'stackoverflow', 11),
(40, 'text', 62, NULL, 'goffer', '/users/4409193/goffer', 'stackoverflow', 11),
(41, 'text', 34, NULL, 'Martijn Pieters', '/users/100297/martijn-pieters', 'stackoverflow', 11),
(42, 'text', 20, NULL, 'Grant Curell', '/users/4427375/grant-curell', 'stackoverflow', 11),
(43, 'text', 14, NULL, 'fralau', '/users/4334041/fralau', 'stackoverflow', 11),
(44, 'text', 11, NULL, 'LaCroixed', '/users/3148389/lacroixed', 'stackoverflow', 11),
(45, 'text', 11, NULL, 'SeF', '/users/4247599/sef', 'stackoverflow', 11),
(46, 'text', 8, NULL, 'Árthur', '/users/7250195/%c3%81rthur', 'stackoverflow', 11),
(47, 'text', 8, NULL, 'Andor', '/users/773306/andor', 'stackoverflow', 11),
(48, 'text', 6, NULL, 'vijayraj34', '/users/2112382/vijayraj34', 'stackoverflow', 11),
(49, 'text', 6, NULL, 'Cat Mai', '/users/13030069/cat-mai', 'stackoverflow', 11),
(50, 'text', 6, NULL, 'SamTheProgrammer', '/users/15515166/samtheprogrammer', 'stackoverflow', 11),
(51, 'text', 4, NULL, 'Salt999', '/users/7137242/salt999', 'stackoverflow', 11),
(52, 'text', 3, NULL, 'Came Up', '/users/14395726/came-up', 'stackoverflow', 11),
(53, 'text', 2, NULL, 'Taras  Kucherenko', '/users/4776477/taras-kucherenko', 'stackoverflow', 11),
(54, 'text', 2, NULL, 'user5359531', '/users/5359531/user5359531', 'stackoverflow', 11),
(55, 'text', 1, NULL, 'Darvin Rio', '/users/16220273/darvin-rio', 'stackoverflow', 11),
(56, 'text', 1, NULL, 'Apurva Khatri', '/users/9139489/apurva-khatri', 'stackoverflow', 11),
(57, 'text', 0, NULL, 'tommiport5', '/users/2127241/tommiport5', 'stackoverflow', 11),
(58, 'text', 0, NULL, 'PythonSnek', '/users/14203913/pythonsnek', 'stackoverflow', 11),
(59, 'text', 0, NULL, 'Hitesh Sahu', '/users/2252113/hitesh-sahu', 'stackoverflow', 11),
(60, 'text', 0, NULL, 'OLL', '/users/1904009/oll', 'stackoverflow', 11),
(61, 'text', -1, NULL, 'Ronny', '/users/19322455/ronny', 'stackoverflow', 11),
(62, 'text', -3, NULL, 'Mahmoud K.', '/users/260229/mahmoud-k', 'stackoverflow', 11),
(63, 'text', 1291, NULL, 'Alec Thomas', '/users/7980/alec-thomas', 'stackoverflow', 12),
(64, 'text', 804, NULL, 'Jimmy', '/users/4435/jimmy', 'stackoverflow', 12),
(65, 'text', 482, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 12),
(66, 'text', 193, NULL, 'MartinStettner', '/users/81424/martinstettner', 'stackoverflow', 12),
(67, 'text', 94, NULL, 'L̲̳o̲̳̳n̲̳̳g̲̳̳p̲̳o̲̳̳k̲̳̳e̲̳̳', '/users/80243/l%cc%b2%cc%b3o%cc%b2%cc%b3%cc%b3n%cc%b2%cc%b3%cc%b3g%cc%b2%cc%b3%cc%b3p%cc%b2%cc%b3o%cc', 'stackoverflow', 12),
(68, 'text', 83, NULL, 'Bob Stein', '/users/673991/bob-stein', 'stackoverflow', 12),
(69, 'text', 55, NULL, 'Lasse V. Karlsen', '/users/267/lasse-v-karlsen', 'stackoverflow', 12),
(70, 'text', 15, NULL, 'Cyker', '/users/418966/cyker', 'stackoverflow', 12),
(71, 'text', 11, NULL, 'Mihai Capotă', '/users/200234/mihai-capot%c4%83', 'stackoverflow', 12),
(72, 'text', 9, NULL, 'Eugene Yarmash', '/users/244297/eugene-yarmash', 'stackoverflow', 12),
(73, 'text', 3, NULL, 'prosti', '/users/5884955/prosti', 'stackoverflow', 12),
(74, 'text', 1787, NULL, 'BrenBarn', '/users/1427416/brenbarn', 'stackoverflow', 13),
(75, 'text', 76, NULL, 'Rami Ka.', '/users/9549366/rami-ka', 'stackoverflow', 13),
(76, 'text', 13, NULL, 'Steve L', '/users/32584/steve-l', 'stackoverflow', 13),
(77, 'text', 11, NULL, 'Smit Johnth', '/users/2112218/smit-johnth', 'stackoverflow', 13),
(78, 'text', 10, NULL, 'torek', '/users/1256452/torek', 'stackoverflow', 13),
(79, 'text', 6, NULL, 'Federico', '/users/299421/federico', 'stackoverflow', 13),
(80, 'text', 3, NULL, 'Brad Dre', '/users/4228110/brad-dre', 'stackoverflow', 13),
(81, 'text', 1, NULL, 'Lars', '/users/6321929/lars', 'stackoverflow', 13),
(82, 'text', 1, NULL, 'theodox', '/users/1936075/theodox', 'stackoverflow', 13),
(83, 'text', 1, NULL, 'Ronny', '/users/19322455/ronny', 'stackoverflow', 13),
(84, 'text', 0, NULL, 'ec2604', '/users/9405022/ec2604', 'stackoverflow', 13),
(85, 'text', -1, NULL, 'Ark-kun', '/users/1497385/ark-kun', 'stackoverflow', 13),
(86, 'text', 4214, NULL, 'Paolo Bergantino', '/users/16417/paolo-bergantino', 'stackoverflow', 14),
(87, 'text', 1219, NULL, 'Peter Mortensen', '/users/63550/peter-mortensen', 'stackoverflow', 14),
(88, 'text', 1208, NULL, 'Yugal Jindle', '/users/731963/yugal-jindle', 'stackoverflow', 14),
(89, 'text', 169, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 14),
(90, 'text', 121, NULL, 'Jason Creighton', '/users/51717/jason-creighton', 'stackoverflow', 14),
(91, 'text', 65, NULL, 'Asher', '/users/1164146/asher', 'stackoverflow', 14),
(92, 'text', 61, NULL, 'Colonel Panic', '/users/284795/colonel-panic', 'stackoverflow', 14),
(93, 'text', 43, NULL, 'kiriloff', '/users/1141493/kiriloff', 'stackoverflow', 14),
(94, 'text', 34, NULL, 'Brent Bradburn', '/users/86967/brent-bradburn', 'stackoverflow', 14),
(95, 'text', 32, NULL, 'campeterson', '/users/514866/campeterson', 'stackoverflow', 14),
(96, 'text', 24, NULL, 'Michael Ekoka', '/users/56974/michael-ekoka', 'stackoverflow', 14),
(97, 'text', 15, NULL, 'cs95', '/users/4909087', 'stackoverflow', 14),
(98, 'text', 9, NULL, 'Burak Özdemir', '/users/2972179/burak-%c3%96zdemir', 'stackoverflow', 14),
(99, 'text', 8, NULL, 'ingyhere', '/users/325452/ingyhere', 'stackoverflow', 14),
(100, 'text', 6, NULL, 'Agus Mathew', '/users/9814608/agus-mathew', 'stackoverflow', 14),
(101, 'text', 5, NULL, 'Susan', '/users/7178336/susan', 'stackoverflow', 14),
(102, 'text', 4, NULL, 'm_____z', '/users/3628578/m-z', 'stackoverflow', 14),
(103, 'text', 1, NULL, 'DS_ShraShetty', '/users/17385292/ds-shrashetty', 'stackoverflow', 14),
(104, 'text', 5733, NULL, 'kender', '/users/4172/kender', 'stackoverflow', 15),
(105, 'text', 712, NULL, 'Harley Holcombe', '/users/1057/harley-holcombe', 'stackoverflow', 15),
(106, 'text', 625, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 15),
(107, 'text', 132, NULL, 'Greg Hewgill', '/users/893/greg-hewgill', 'stackoverflow', 15),
(108, 'text', 86, NULL, 'PythonProgrammi', '/users/6464947/pythonprogrammi', 'stackoverflow', 15),
(109, 'text', 67, NULL, 'Erik', '/users/1080125/erik', 'stackoverflow', 15),
(110, 'text', 47, NULL, 'CodyChan', '/users/1528712/codychan', 'stackoverflow', 15),
(111, 'text', 41, NULL, 'denfromufa', '/users/2230844/denfromufa', 'stackoverflow', 15),
(112, 'text', 25, NULL, 'Chaitanya', '/users/202507/chaitanya', 'stackoverflow', 15),
(113, 'text', 23, NULL, 'skdev75', '/users/3138785/skdev75', 'stackoverflow', 15),
(114, 'text', 23, NULL, 'kiriloff', '/users/1141493/kiriloff', 'stackoverflow', 15),
(115, 'text', 18, NULL, 'The Gr8 Adakron', '/users/5866942/the-gr8-adakron', 'stackoverflow', 15),
(116, 'text', 15, NULL, 'bconstanzo', '/users/3594441/bconstanzo', 'stackoverflow', 15),
(117, 'text', 15, NULL, 'Shiv', '/users/4144205/shiv', 'stackoverflow', 15),
(118, 'text', 11, NULL, 'kmario23', '/users/2956066/kmario23', 'stackoverflow', 15),
(119, 'text', 7, NULL, 'Crabime', '/users/5531783/crabime', 'stackoverflow', 15),
(120, 'text', 5, NULL, 'AbstProcDo', '/users/7301792/abstprocdo', 'stackoverflow', 15),
(121, 'text', 3, NULL, 'tessie', '/users/2813483/tessie', 'stackoverflow', 15),
(122, 'text', 0, NULL, 'ilias iliadis', '/users/2362556/ilias-iliadis', 'stackoverflow', 15),
(123, 'text', 0, NULL, 'vivek', '/users/3257783/vivek', 'stackoverflow', 15),
(124, 'text', 3856, NULL, 'Felix Kling', '/users/218196/felix-kling', 'stackoverflow', 16),
(125, 'text', 723, NULL, 'cryo', '/users/304185/cryo', 'stackoverflow', 16),
(126, 'text', 179, NULL, 'anatoly techtonik', '/users/239247/anatoly-techtonik', 'stackoverflow', 16),
(127, 'text', 148, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 16),
(128, 'text', 69, NULL, 'Aaditya Ura', '/users/5904928/aaditya-ura', 'stackoverflow', 16),
(129, 'text', 65, NULL, 'jack', '/users/894381/jack', 'stackoverflow', 16),
(130, 'text', 48, NULL, 'Paul Tarjan', '/users/90025/paul-tarjan', 'stackoverflow', 16),
(131, 'text', 39, NULL, 'River', '/users/3745896/river', 'stackoverflow', 16),
(132, 'text', 36, NULL, 'erisco', '/users/260584/erisco', 'stackoverflow', 16),
(133, 'text', 22, NULL, 'AMR', '/users/4418502/amr', 'stackoverflow', 16),
(134, 'text', 16, NULL, 'SCB', '/users/1112586/scb', 'stackoverflow', 16),
(135, 'text', 13, NULL, 'Ravi Shankar', '/users/4457169/ravi-shankar', 'stackoverflow', 16),
(136, 'text', 12, NULL, 'jainashish', '/users/3468139/jainashish', 'stackoverflow', 16),
(137, 'text', 12, NULL, 'Corman', '/users/11741338/corman', 'stackoverflow', 16),
(138, 'text', 8, NULL, 'Chris_Rands', '/users/6260170/chris-rands', 'stackoverflow', 16),
(139, 'text', 5, NULL, 'Dr. Hippo', '/users/12908850/dr-hippo', 'stackoverflow', 16),
(140, 'text', 4, NULL, 'B.Mr.W.', '/users/1953475/b-mr-w', 'stackoverflow', 16),
(141, 'text', 1, NULL, 'shahar_m', '/users/662770/shahar-m', 'stackoverflow', 16),
(142, 'text', 1, NULL, 'Roshin Raphel', '/users/13328195/roshin-raphel', 'stackoverflow', 16),
(143, 'text', 1, NULL, 'fjemi', '/users/10773184/fjemi', 'stackoverflow', 16),
(144, 'text', 1, NULL, 'Laurent Lyaudet', '/users/5796086/laurent-lyaudet', 'stackoverflow', 16),
(145, 'text', 1916, NULL, 'Colonel Panic', '/users/284795/colonel-panic', 'stackoverflow', 17),
(146, 'text', 308, NULL, 'Adrián Deccico', '/users/249372/adri%c3%a1n-deccico', 'stackoverflow', 17),
(147, 'text', 224, NULL, 'AndrewPK', '/users/705198/andrewpk', 'stackoverflow', 17),
(148, 'text', 212, NULL, 'Gringo Suave', '/users/450917/gringo-suave', 'stackoverflow', 17),
(149, 'text', 52, NULL, 'matth', '/users/874701/matth', 'stackoverflow', 17),
(150, 'text', 48, NULL, 'Rafe Kettler', '/users/399815/rafe-kettler', 'stackoverflow', 17),
(151, 'text', 42, NULL, 'Martin Redola', '/users/862111/martin-redola', 'stackoverflow', 17),
(152, 'text', 35, NULL, 'Fernando Macedo', '/users/585592/fernando-macedo', 'stackoverflow', 17),
(153, 'text', 28, NULL, 'David Fraser', '/users/120398/david-fraser', 'stackoverflow', 17),
(154, 'text', 23, NULL, 'Guillaume', '/users/2330065', 'stackoverflow', 17),
(155, 'text', 23, NULL, 'Daniel Adenew', '/users/2281472', 'stackoverflow', 17),
(156, 'text', 20, NULL, 'Dylan Hogg', '/users/249597/dylan-hogg', 'stackoverflow', 17),
(157, 'text', 18, NULL, 'thegauraw', '/users/1479143/thegauraw', 'stackoverflow', 17),
(158, 'text', 18, NULL, 'RayLuo', '/users/728675/rayluo', 'stackoverflow', 17),
(159, 'text', 17, NULL, 'user1233104', '/users/1233104/user1233104', 'stackoverflow', 17),
(160, 'text', 16, NULL, 'h--n', '/users/375230/h-n', 'stackoverflow', 17),
(161, 'text', 13, NULL, 'Tobias Kienzler', '/users/321973/tobias-kienzler', 'stackoverflow', 17),
(162, 'text', 13, NULL, 'pylang', '/users/4531270', 'stackoverflow', 17),
(163, 'text', 13, NULL, 'Harun ERGUL', '/users/4104008', 'stackoverflow', 17),
(164, 'text', 10, NULL, 'Maximiliano Rios', '/users/203991/maximiliano-rios', 'stackoverflow', 17),
(165, 'text', 8, NULL, '\r\n        Adil Abbasi\r\n        ', '/posts/26009357/revisions', 'stackoverflow', 17),
(166, 'text', 5, NULL, 'CaptainCodeman', '/users/1219247/captaincodeman', 'stackoverflow', 17),
(167, 'text', 5, NULL, 'praveenak', '/users/1742222', 'stackoverflow', 17),
(168, 'text', 5, NULL, 'Sumithran', '/users/6562458', 'stackoverflow', 17),
(169, 'text', 4, NULL, 'CONvid19', '/users/797495', 'stackoverflow', 17),
(170, 'text', 4, NULL, 'Peter Mortensen', '/users/63550', 'stackoverflow', 17),
(171, 'text', 4, NULL, 'Chetan Sharma', '/users/1540340', 'stackoverflow', 17),
(172, 'text', 3, NULL, 'Usman Ahmed', '/users/2243776', 'stackoverflow', 17),
(173, 'text', 3, NULL, 'Peter Mortensen', '/users/63550', 'stackoverflow', 17),
(174, 'text', 2, NULL, '\r\n        ybdesire\r\n        ', '/posts/30045463/revisions', 'stackoverflow', 17),
(175, 'text', 6564, NULL, 'Blair Conrad', '/users/1199/blair-conrad', 'stackoverflow', 18),
(176, 'text', 1448, NULL, 'Asclepius', '/users/832230/asclepius', 'stackoverflow', 18),
(177, 'text', 651, NULL, 'Heikki Toivonen', '/users/62596/heikki-toivonen', 'stackoverflow', 18),
(178, 'text', 127, NULL, 'hiro protagonist', '/users/4954037/hiro-protagonist', 'stackoverflow', 18),
(179, 'text', 123, NULL, 'Peter Mortensen', '/users/63550/peter-mortensen', 'stackoverflow', 18),
(180, 'text', 101, NULL, 'Douglas Mayle', '/users/8458/douglas-mayle', 'stackoverflow', 18),
(181, 'text', 70, NULL, 'gone', '/users/26880/gone', 'stackoverflow', 18),
(182, 'text', 58, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 18),
(183, 'text', 42, NULL, 'Ali Afshar', '/users/28380/ali-afshar', 'stackoverflow', 18),
(184, 'text', 34, NULL, 'Russia Must Remove Putin', '/users/541136/russia-must-remove-putin', 'stackoverflow', 18),
(185, 'text', 26, NULL, 'Antti Haapala -- Слава Україні', '/users/918959/antti-haapala-%d0%a1%d0%bb%d0%b0%d0%b2%d0%b0-%d0%a3%d0%ba%d1%80%d0%b0%d1%97%d0%bd%d1%9', 'stackoverflow', 18),
(186, 'text', 25, NULL, 'tashuhka', '/users/2039736/tashuhka', 'stackoverflow', 18),
(187, 'text', 24, NULL, 'euccas', '/users/3109254/euccas', 'stackoverflow', 18),
(188, 'text', 20, NULL, 'kavadias', '/users/2258526/kavadias', 'stackoverflow', 18),
(189, 'text', 16, NULL, 'Devil', '/users/9427260/devil', 'stackoverflow', 18),
(190, 'text', 14, NULL, 'Victoria Stuart', '/users/1904943/victoria-stuart', 'stackoverflow', 18),
(191, 'text', 13, NULL, 'Dennis Golomazov', '/users/304209/dennis-golomazov', 'stackoverflow', 18),
(192, 'text', 13, NULL, 'LGBTQ-BLM', '/users/8411609/lgbtq-blm', 'stackoverflow', 18),
(193, 'text', 10, NULL, 'Geoff Paul Bremner', '/users/4821206/geoff-paul-bremner', 'stackoverflow', 18),
(194, 'text', 10, NULL, 'Hussam Kurd', '/users/1627358/hussam-kurd', 'stackoverflow', 18),
(195, 'text', 10, NULL, 'Dominykas Mostauskis', '/users/1714997/dominykas-mostauskis', 'stackoverflow', 18),
(196, 'text', 9, NULL, 'alissonmuller', '/users/3051142/alissonmuller', 'stackoverflow', 18),
(197, 'text', 9, NULL, 'Michael Strobel', '/users/7424032/michael-strobel', 'stackoverflow', 18),
(198, 'text', 9, NULL, 'Manivannan Murugavel', '/users/6559063/manivannan-murugavel', 'stackoverflow', 18),
(199, 'text', 8, NULL, 'Steffi Keran Rani J', '/users/7245145/steffi-keran-rani-j', 'stackoverflow', 18),
(200, 'text', 6, NULL, 'Ralph Schwerdt', '/users/4606792/ralph-schwerdt', 'stackoverflow', 18),
(201, 'text', 6, NULL, 'iPhynx', '/users/5489173/iphynx', 'stackoverflow', 18),
(202, 'text', 3, NULL, 'korakot', '/users/6729010/korakot', 'stackoverflow', 18),
(203, 'text', -4, NULL, 'Sergiy Maksymenko', '/users/3754430/sergiy-maksymenko', 'stackoverflow', 18),
(204, 'text', 253, NULL, 'Multihunter', '/users/4082104/multihunter', 'stackoverflow', 19),
(205, 'text', 241, NULL, 'Jenish', '/users/7271298/jenish', 'stackoverflow', 19),
(206, 'text', 56, NULL, 'User', '/users/1320237/user', 'stackoverflow', 19),
(207, 'text', 43, NULL, 'Jason DeMorrow', '/users/3891760/jason-demorrow', 'stackoverflow', 19),
(208, 'text', 29, NULL, 'Guzman Ojero', '/users/6710903/guzman-ojero', 'stackoverflow', 19),
(209, 'text', 21, NULL, 'Joe Zhow', '/users/6150733/joe-zhow', 'stackoverflow', 19),
(210, 'text', 15, NULL, 'dlamblin', '/users/459/dlamblin', 'stackoverflow', 19),
(211, 'text', 8, NULL, 'Mierpo', '/users/8467569/mierpo', 'stackoverflow', 19),
(212, 'text', 5, NULL, 'pelos', '/users/1704282/pelos', 'stackoverflow', 19),
(213, 'text', 5, NULL, 'Chris Collett', '/users/10792235/chris-collett', 'stackoverflow', 19),
(214, 'text', 4, NULL, 'Jerome', '/users/4593553/jerome', 'stackoverflow', 19),
(215, 'text', 1, NULL, 'Jimm Chen', '/users/151453/jimm-chen', 'stackoverflow', 19),
(216, 'text', 0, NULL, 'Andre de Miranda', '/users/888876/andre-de-miranda', 'stackoverflow', 19),
(217, 'text', 0, NULL, 'Rex Mudanya', '/users/8230893/rex-mudanya', 'stackoverflow', 19),
(218, 'text', 0, NULL, 'Frederico Fiuza', '/users/6054433/frederico-fiuza', 'stackoverflow', 19),
(219, 'text', 709, NULL, 'f3lix', '/users/60617/f3lix', 'stackoverflow', 20),
(220, 'text', 424, NULL, 'Remi', '/users/847331/remi', 'stackoverflow', 20),
(221, 'text', 420, NULL, 'np8', '/users/3015186/np8', 'stackoverflow', 20),
(222, 'text', 151, NULL, 'hasen', '/users/35364/hasen', 'stackoverflow', 20),
(223, 'text', 115, NULL, 'Shinbero', '/users/4282700/shinbero', 'stackoverflow', 20),
(224, 'text', 78, NULL, 'Rob Ellenbroek', '/users/7564998/rob-ellenbroek', 'stackoverflow', 20),
(225, 'text', 63, NULL, 'Ricardo Murillo', '/users/775351/ricardo-murillo', 'stackoverflow', 20),
(226, 'text', 35, NULL, 'Edward', '/users/3787376/edward', 'stackoverflow', 20),
(227, 'text', 32, NULL, 'Mike', '/users/197921/mike', 'stackoverflow', 20),
(228, 'text', 31, NULL, 'itmatters', '/users/5767407/itmatters', 'stackoverflow', 20),
(229, 'text', 26, NULL, 'Thomas R', '/users/7037980/thomas-r', 'stackoverflow', 20),
(230, 'text', 25, NULL, 'Yu N.', '/users/10970151/yu-n', 'stackoverflow', 20),
(231, 'text', 18, NULL, 'Ravin Gupta', '/users/4648521/ravin-gupta', 'stackoverflow', 20),
(232, 'text', 11, NULL, 'Andong Zhan', '/users/2406128/andong-zhan', 'stackoverflow', 20),
(233, 'text', 11, NULL, 'zviad', '/users/2127650/zviad', 'stackoverflow', 20),
(234, 'text', 11, NULL, 'tjk', '/users/937592/tjk', 'stackoverflow', 20),
(235, 'text', 11, NULL, 'Vinoj John Hosan', '/users/1587156/vinoj-john-hosan', 'stackoverflow', 20),
(236, 'text', 6, NULL, 'YFP', '/users/1587675/yfp', 'stackoverflow', 20),
(237, 'text', 6, NULL, 'Gin', '/users/14475572/gin', 'stackoverflow', 20),
(238, 'text', 4, NULL, 'Erel Segal-Halevi', '/users/827927/erel-segal-halevi', 'stackoverflow', 20),
(239, 'text', 4, NULL, 'Thomas R', '/users/7037980/thomas-r', 'stackoverflow', 20),
(240, 'text', 2, NULL, 'Sida Zhou', '/users/2202107/sida-zhou', 'stackoverflow', 20),
(241, 'text', 1, NULL, 'user3181121', '/users/3181121/user3181121', 'stackoverflow', 20),
(242, 'text', 1, NULL, 'Casper Hansen', '/users/7910473/casper-hansen', 'stackoverflow', 20),
(243, 'text', 1, NULL, 'Miroslav Hinkov', '/users/14099540/miroslav-hinkov', 'stackoverflow', 20),
(244, 'text', 0, NULL, 'fx-kirin', '/users/1903430/fx-kirin', 'stackoverflow', 20),
(245, 'text', 0, NULL, 'mj_whales', '/users/14039621/mj-whales', 'stackoverflow', 20),
(246, 'text', -2, NULL, 'JLT', '/users/4837077/jlt', 'stackoverflow', 20),
(247, 'text', -4, NULL, 'Ricardo D. Quiroga', '/users/6178193/ricardo-d-quiroga', 'stackoverflow', 20),
(248, 'text', 28, NULL, 'random', '/users/570967/random', 'stackoverflow', 21),
(249, 'text', 14, NULL, 'Torsten Engelbrecht', '/users/461343/torsten-engelbrecht', 'stackoverflow', 21),
(250, 'text', 7, NULL, 'Allen May', '/users/1969875/allen-may', 'stackoverflow', 21),
(251, 'text', 1, NULL, 'tekknolagi', '/users/569183/tekknolagi', 'stackoverflow', 21),
(252, 'text', 1, NULL, 'Dunes', '/users/529630/dunes', 'stackoverflow', 21),
(253, 'text', 0, NULL, 'TheMeaningfulEngineer', '/users/1214214/themeaningfulengineer', 'stackoverflow', 21),
(254, 'text', 1, NULL, 'ncoghlan', '/users/597742/ncoghlan', 'stackoverflow', 22),
(255, 'text', 0, NULL, 'JohannesKrabbe', '/users/15906059/johanneskrabbe', 'stackoverflow', 23),
(256, 'text', 543, NULL, 'awesomo', '/users/226037/awesomo', 'stackoverflow', 24),
(257, 'text', 152, NULL, 'Alex Martelli', '/users/95810/alex-martelli', 'stackoverflow', 24),
(258, 'text', 101, NULL, 'sth', '/users/56338/sth', 'stackoverflow', 24),
(259, 'text', 55, NULL, 'auserdude', '/users/3789324/auserdude', 'stackoverflow', 24),
(260, 'text', 30, NULL, 'entrepaul', '/users/1478804/entrepaul', 'stackoverflow', 24),
(261, 'text', 26, NULL, 'Blue Peppers', '/users/266539/blue-peppers', 'stackoverflow', 24),
(262, 'text', 18, NULL, 'Pierz', '/users/436794/pierz', 'stackoverflow', 24),
(263, 'text', 14, NULL, 'testsingh', '/users/2953225/testsingh', 'stackoverflow', 24),
(264, 'text', 11, NULL, 'Zah', '/users/1007990/zah', 'stackoverflow', 24),
(265, 'text', 11, NULL, 'Peter Piper', '/users/3009846/peter-piper', 'stackoverflow', 24),
(266, 'text', 9, NULL, 'boyangeor', '/users/4150675/boyangeor', 'stackoverflow', 24),
(267, 'text', 7, NULL, 'janex', '/users/1016936/janex', 'stackoverflow', 24),
(268, 'text', 7, NULL, 'Caio Oliveira', '/users/2200312/caio-oliveira', 'stackoverflow', 24),
(269, 'text', 5, NULL, 'andrei deusteanu', '/users/5873542/andrei-deusteanu', 'stackoverflow', 24),
(270, 'text', 4, NULL, 'wpmoradi', '/users/4384809/wpmoradi', 'stackoverflow', 24),
(271, 'text', 2, NULL, 'Cloud Cho', '/users/5595995/cloud-cho', 'stackoverflow', 24),
(272, 'text', 1, NULL, 'aahnik', '/users/15710459/aahnik', 'stackoverflow', 24),
(273, 'text', 0, NULL, 'Rubber Duck', '/users/1447071/rubber-duck', 'stackoverflow', 24),
(274, 'text', 0, NULL, 'DougR', '/users/2007153/dougr', 'stackoverflow', 24),
(275, 'text', 0, NULL, 'Filipe', '/users/15037509/filipe', 'stackoverflow', 24),
(276, 'text', 0, NULL, 'Paul Bradbury', '/users/15342125/paul-bradbury', 'stackoverflow', 24),
(277, 'text', -5, NULL, 'Al Kari', '/users/1632150/al-kari', 'stackoverflow', 24),
(278, 'text', 1, NULL, 'abarnert', '/users/908494/abarnert', 'stackoverflow', 25),
(279, 'text', 0, NULL, 'Strik3r', '/users/6017675/strik3r', 'stackoverflow', 25),
(280, 'text', 4, NULL, 'Davis Herring', '/users/8586227/davis-herring', 'stackoverflow', 26),
(281, 'text', 5, NULL, 'John Freeman', '/users/12352989/john-freeman', 'stackoverflow', 27),
(282, 'text', 1, NULL, 'Santhosh Kumar', '/users/4838235/santhosh-kumar', 'stackoverflow', 27),
(283, 'text', 1, NULL, 'J_H', '/users/8431111/j-h', 'stackoverflow', 27),
(284, 'text', 1, NULL, 'Lee', '/users/12270354/lee', 'stackoverflow', 27),
(285, 'text', -1, NULL, 'Vit0r', '/users/6750532/vit0r', 'stackoverflow', 28),
(286, 'text', 0, NULL, 'Manuel', '/users/11233408/manuel', 'stackoverflow', 29);

-- --------------------------------------------------------

--
-- Table structure for table `code`
--

CREATE TABLE `code` (
  `id` int(11) NOT NULL,
  `answer_code` varchar(250) NOT NULL,
  `code_lang` varchar(50) DEFAULT NULL,
  `answer_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `code`
--

INSERT INTO `code` (`id`, `answer_code`, `code_lang`, `answer_id`) VALUES
(1, 'project\n  -model\n    __init__.py\n    my_file.py\n  -tests\n    __init__.py\n    test_my_file.py\n', NULL, 1),
(2, 'from .foo import bar\nfrom .other import sample\n', NULL, 2),
(3, 'from .other import sample\n', NULL, 3),
(4, 'from .other import sample\n', NULL, 3),
(5, 'from cones.foo import bar\n', NULL, 3),
(6, 'package/\n    __init__.py\n    subpackage1/\n        __init__.py\n        moduleX.py\n    moduleA.py\n', NULL, 4),
(7, 'from .. import foo\n', NULL, 5),
(8, 'if __package__ is None or __package__ == \'\':\n    # uses current directory visibility\n    import foo\nelse:\n    # uses current package visibility\n    from . import foo\n', NULL, 5),
(9, 'if __name__ == \'__main__\':\n   # run test code here...\n', NULL, 6),
(10, '# import any site-lib modules first, then...\nimport sys\nparent_module = sys.modules[\'.\'.join(__name__.split(\'.\')[:-1]) or \'__main__\']\nif __name__ == \'__main__\' or parent_module.__name__ == \'__main__\':\n    from codex import Codex # these are in same f', NULL, 6),
(11, 'from __future__ import print_function # only when showing how this works\n\nif __package__:\n    print(\'Package named {!r}; __name__ is {!r}\'.format(__package__, __name__))\n    from .fileA import f1, f2\n    from .fileB import Class3\nelse:\n    print(\'Not', NULL, 8),
(12, '$ python2 lib.foo\n', NULL, 8),
(13, '$ python3 lib.foo\n', NULL, 8),
(14, 'Package named \'lib\'; __name__ is \'__main__\'\n', NULL, 8),
(15, '$ python2 lib.foo\nPackage named \'lib\'; __name__ is \'lib.foo\'\nPackage named \'lib\'; __name__ is \'__main__\'\n', NULL, 8),
(16, '$ python3 lib.routine\nPackage named \'lib\'; __name__ is \'lib.foo\'\n[...]/runpy.py:125: RuntimeWarning: \'lib.foo\' found in sys.modules\nafter import of package \'lib\', but prior to execution of \'lib.foo\';\nthis may result in unpredictable behaviour\n  warn(', NULL, 8),
(17, '    import os, sys\n    _i = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n    if _i not in sys.path:\n        sys.path.insert(0, _i)\n    else:\n        _i = None\n\n    from sub.fileA import f1, f2\n    from sub.fileB import Class3\n\n    if _', NULL, 8),
(18, 'import os\nimport sys\nparent_dir_name = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))\nsys.path.append(parent_dir_name + \"/your_dir\")\nimport your_script\nyour_script.a_function()\n', NULL, 9),
(19, 'package/\n    __init__.py\n    subpackage1/\n        __init__.py\n        moduleX.py\n    moduleA.py\n', NULL, 10),
(20, '#!/usr/bin/env python3\n\nimport inspect\nimport imp\nimport os\n\ndef get_script_dir(follow_symlinks=True):\n    \"\"\"\n    Return directory of code defining this very function.\n    Should work from a module as well as from a script.\n    \"\"\"\n    script_path =', NULL, 11),
(21, '#!/usr/bin/env python3\n\nif __name__ == \'__main__\' and __package__ is None:\n    from os import sys, path\n    # __file__ should be defined in this case\n    PARENT_DIR = path.dirname(path.dirname(path.abspath(__file__)))\n   sys.path.append(PARENT_DIR)\nf', NULL, 11),
(22, 'import ultraimport\nfoo = ultraimport(\'__dir__/foo.py\')\n', NULL, 13),
(23, '#dir/package/module1/foo.py\n\n#dir/package/module2/bar.py\nfrom ..module1 import foo\n', NULL, 15),
(24, 'from network model import Node\n', NULL, 16),
(25, 'from .. import model\nprint \"Model\", model\n\nfrom ..model import Node\nprint \"Node\", Node\n\nfrom network.model import Node\nprint \"Absolute\", Node\n', NULL, 16),
(26, 'Model <module \'network.model\' from \'/tmp/network/model.pyc\'>\nNode <class \'network.model.Node\'>\nAbsolute <class \'network.model.Node\'>\n', NULL, 16),
(27, 'project/\n    program.py           # entry point to the program\n    network/         \n        __init__.py\n        transform/       # .. will target network\n            __init__.py\n', NULL, 17),
(28, 'network/\n    model.py\n    __init__.py\n', NULL, 17),
(29, 'python -m package.subpackage1.moduleX\n', NULL, 18),
(30, 'package/\n    __init__.py\n    subpackage1/\n        __init__.py\n        moduleX.py\n        moduleY.py\n    subpackage2/\n        __init__.py\n        moduleZ.py\n    moduleA.py\n', NULL, 18),
(31, 'c:\\>python -m package.subpackage1.moduleX\n', NULL, 18),
(32, 'from .moduleY import spam\nfrom .moduleY import spam as ham\nfrom . import moduleY\nfrom ..subpackage1 import moduleY\nfrom ..subpackage2.moduleZ import eggs\nfrom ..moduleA import foo\nfrom ...package import bar\nfrom ...sys import path\n', NULL, 18),
(33, 'from ...package import bar\n', NULL, 18),
(34, 'from ...sys import path\n', NULL, 18),
(35, 'import sys\nsys.path.append(\"..\") # Adds higher directory to python modules path.\n', NULL, 20),
(36, 'package1/\n    subpackage1/\n        module1.py\npackage2/\n    subpackage2/\n        module2.py\n', NULL, 22),
(37, 'import sys\nsys.path.append(\".\")\n', NULL, 22),
(38, 'import os\nprint (os.getcwd())\n', NULL, 22),
(39, '#  package.test_A/test.py\nfrom ..A import foo\n', NULL, 23),
(40, '#  root.py\nfrom package.test_A import test\n', NULL, 23),
(41, 'package.A.foo has been imported\nModule\'s name is:  package.test_A.test\n', NULL, 23),
(42, 'python -m package.test_A.test\n', NULL, 23),
(43, 'import sys\nsys.path.append(\"..\")\n', NULL, 24),
(44, 'PYTHONPATH=/path/to/package python -m test_A.test\n', NULL, 25),
(45, 'from os import path\n…\ndef main():\n…\nif __name__ == \'__main__\':\n    import sys\n    sys.path.append(path.join(path.dirname(__file__), \'..\'))\n    from A import foo\n\n    exit(main())\n', NULL, 25),
(46, 'import alias\n', NULL, 27),
(47, 'from A import foo\n', NULL, 28),
(48, 'import sys\nimport os\nimport pathlib\ntarget_path = pathlib.Path(os.path.abspath(__file__)).parents[3]\nsys.path.append(target_path)\nfrom utils import MultiFileAllowed\n', NULL, 29),
(49, 'import sys\nimport os\nsys.path.append(os.getcwd())\nfrom utils import MultiFileAllowed\n', NULL, 29),
(50, 'python -m test_A.test\n', NULL, 30),
(51, 'import test_A.test\n', NULL, 30),
(52, 'from test_A import test\n', NULL, 30),
(53, 'python -m package.test_A.test\n', NULL, 30),
(54, 'from package.test_A import test\n', NULL, 30),
(55, 'project_root\n  |\n  |----- my_module\n  |          \\\n  |           \\_____ my_class.py\n  |\n  \\ tests\n      \\___ test_my_func.py\n\n', NULL, 31),
(56, 'package/\n   __init__.py\n   A/\n      __init__.py\n      foo.py\n   test_A/\n      __init__.py\n      test.py\n\n', NULL, 32),
(57, '\nfrom .foo import foo\n', NULL, 32),
(58, '\nimport sys, os\nsys.path.append(os.path.abspath(\'../A\'))\n# then import foo\nimport foo\n\n', NULL, 32),
(59, 'from A import foo\n', NULL, 33),
(60, 'main.py\nmypackage/\n    __init__.py\n    mymodule.py\n    myothermodule.py\n', NULL, 37),
(61, '#!/usr/bin/env python3\n\n# Exported function\ndef as_int(a):\n    return int(a)\n\n# Test function for module  \ndef _test():\n    assert as_int(\'1\') == 1\n\nif __name__ == \'__main__\':\n    _test()\n', NULL, 37),
(62, '#!/usr/bin/env python3\n\nfrom .mymodule import as_int\n\n# Exported function\ndef add(a, b):\n    return as_int(a) + as_int(b)\n\n# Test function for module  \ndef _test():\n    assert add(\'1\', \'1\') == 2\n\nif __name__ == \'__main__\':\n    _test()\n', NULL, 37),
(63, '#!/usr/bin/env python3\n\nfrom mypackage.myothermodule import add\n\ndef main():\n    print(add(\'1\', \'1\'))\n\nif __name__ == \'__main__\':\n    main()\n', NULL, 37),
(64, 'from .mymodule import as_int\n', NULL, 37),
(65, 'python3 -m mypackage.myothermodule\n', NULL, 37),
(66, 'from mymodule import as_int\n', NULL, 37),
(67, 'from mypackage.mymodule import as_int\n', NULL, 37),
(68, 'import sys\nimport os\n\nSCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))\nsys.path.append(os.path.dirname(SCRIPT_DIR))\n\nfrom mypackage.mymodule import as_int\n', NULL, 37),
(69, 'SystemError: Parent module \'\' not loaded, cannot perform relative import\n', NULL, 38),
(70, 'if (PyDict_GetItem(interp->modules, package) == NULL) {\n    PyErr_Format(PyExc_SystemError,\n            \"Parent module %R not loaded, cannot perform relative \"\n            \"import\", package);\n    goto error;\n}\n', NULL, 38),
(71, 'if (PyUnicode_CompareWithASCIIString(package, \"\") == 0) {\n    PyErr_SetString(PyExc_ImportError,\n            \"attempted relative import with no known parent package\");\n    goto error;\n} /* else if (PyDict_GetItem(interp->modules, package) == NULL) {\n', NULL, 38),
(72, 'ImportError: attempted relative import with no known parent package\n', NULL, 38),
(73, '.\n├── package\n│   ├── __init__.py\n│   ├── module.py\n│   └── standalone.py\n', NULL, 38),
(74, 'from pathlib import Path\nprint(\'Running\' if __name__ == \'__main__\' else \'Importing\', Path(__file__).resolve())\n', NULL, 38),
(75, 'from . import module  # explicit relative import\n', NULL, 38),
(76, 'vaultah@base:~$ python3 -i -m package.standalone\nImporting /home/vaultah/package/__init__.py\nRunning /home/vaultah/package/standalone.py\nImporting /home/vaultah/package/module.py\n>>> __file__\n\'/home/vaultah/package/standalone.py\'\n>>> __package__\n\'pac', NULL, 38),
(77, 'package\n├── __init__.py\n├── module.py\n└── subpackage\n    ├── __init__.py\n    └── subsubpackage\n        ├── __init__.py\n        └── standalone.py\n', NULL, 38),
(78, 'from ... import module  # N = 3\n', NULL, 38),
(79, 'import sys\nfrom pathlib import Path\n\nif __name__ == \'__main__\' and __package__ is None:\n    file = Path(__file__).resolve()\n    parent, top = file.parent, file.parents[3]\n\n    sys.path.append(str(top))\n    try:\n        sys.path.remove(str(parent))\n  ', NULL, 38),
(80, 'vaultah@base:~$ python3 package/subpackage/subsubpackage/standalone.py\nRunning /home/vaultah/package/subpackage/subsubpackage/standalone.py\nImporting /home/vaultah/package/__init__.py\nImporting /home/vaultah/package/subpackage/__init__.py\nImporting /', NULL, 38),
(81, 'if __name__ == \'__main__\' and __package__ is None:\n    import_parents(level=3) # N = 3\n\nfrom ... import module\nfrom ...module.submodule import thing\n', NULL, 38),
(82, '.\n├── project\n│   ├── package\n│   │   ├── __init__.py\n│   │   ├── module.py\n│   │   └── standalone.py\n│   └── setup.py\n', NULL, 38),
(83, 'from setuptools import setup, find_packages\nsetup(\n    name = \'your_package_name\',\n    packages = find_packages(),\n)\n', NULL, 38),
(84, 'from package import module  # absolute import\n', NULL, 38),
(85, 'vaultah@base:~$ cd project\nvaultah@base:~/project$ python3 setup.py install --user\n', NULL, 38),
(86, 'vaultah@base:~/project$ python3 -i package/standalone.py\nRunning /home/vaultah/project/package/standalone.py\nImporting /home/vaultah/.local/lib/python3.6/site-packages/your_package_name-0.0.0-py3.6.egg/package/__init__.py\nImporting /home/vaultah/.loc', NULL, 38),
(87, 'import sys\nfrom pathlib import Path # if you haven\'t already done so\nfile = Path(__file__).resolve()\nparent, root = file.parent, file.parents[1]\nsys.path.append(str(root))\n\n# Additionally remove the current file\'s directory from sys.path\ntry:\n    sys', NULL, 38),
(88, 'from package import module  # absolute import\n', NULL, 38),
(89, 'vaultah@base:~$ python3 -i package/standalone.py\nRunning /home/vaultah/package/standalone.py\nImporting /home/vaultah/package/__init__.py\nImporting /home/vaultah/package/module.py\n>>> module\n<module \'package.module\' from \'/home/vaultah/package/module.', NULL, 38),
(90, '# For relative imports to work in Python 3.6\nimport os, sys; sys.path.append(os.path.dirname(os.path.realpath(__file__)))\n', NULL, 39),
(91, '├── project\n│   ├── package\n│   │   ├── __init__.py\n│   │   ├── module1.py\n│   │   └── module2.py\n│   └── setup.py\n', NULL, 39),
(92, '# in module2.py\nfrom module1 import class1\n', NULL, 39),
(93, '#!/usr/bin/env python3\n#myothermodule\n\nif __name__ == \'__main__\':\n    from mymodule import as_int\nelse:\n    from .mymodule import as_int\n\n\n# Exported function\ndef add(a, b):\n    return as_int(a) + as_int(b)\n\n# Test function for module  \ndef _test():\n', NULL, 40),
(94, 'import repackage\nrepackage.up()\nfrom mypackage.mymodule import myfunction\n', NULL, 43),
(95, '$ python3 test/my_module/module_test.py                                                                                                               2.4.0\nTraceback (most recent call last):\n  File \"test/my_module/module_test.py\", line 6, in <module>', NULL, 44),
(96, '$ PYTHONPATH=. python3 test/my_module/module_test.py                                                                                                  2.4.0\n...........\n----------------------------------------------------------------------\nRan 11 test', NULL, 44),
(97, '# setup.py\nfrom setuptools import setup, find_packages\n\nsetup(\n    name=\'sample\',\n    packages=find_packages()\n)\n', NULL, 44),
(98, 'import os\nimport sys\nimport pathlib\n\nPACKAGE_PARENT = pathlib.Path(__file__).parent\n#PACKAGE_PARENT = pathlib.Path.cwd().parent # if on jupyter notebook\nSCRIPT_DIR = PACKAGE_PARENT / \"my_Folder_where_the_package_lives\"\nsys.path.append(str(SCRIPT_DIR)', NULL, 45),
(99, 'project_demo/\n├── main.py\n├── some_package/\n│   ├── __init__.py\n│   └── project_configs.py\n└── test/\n    └── test_project_configs.py\n', NULL, 46),
(100, 'from some_package import project_configs\n', NULL, 46),
(101, '## Standalone boilerplate before relative imports\nif __package__ is None:                  \n    DIR = Path(__file__).resolve().parent\n    sys.path.insert(0, str(DIR.parent))\n    __package__ = DIR.name\n\nfrom . import variable_in__init__py\nfrom . impor', NULL, 47),
(102, 'from .filename import function\n', NULL, 48),
(103, 'from package_name.filename import function\n', NULL, 48),
(104, 'Folder\n |\n ├─ Scripts\n |   ├─ module123.py\n |\n ├─ main.py\n ├─ script123.py\n', NULL, 50),
(105, 'from . import script123\nfrom Scripts import module123\n', NULL, 50),
(106, 'ParentDirectory\n ├─ Folder\n |   |\n |   ├─ Scripts\n |   |   ├─ module123.py\n |   |\n |   ├─ main.py\n |   ├─ script123.py\n |\n ├─ parentModule.py\n', NULL, 50),
(107, 'import inspect\nimport os\nimport sys\n\ncurrent_dir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparent_dir = os.path.dirname(current_dir)\nsys.path.insert(0, parent_dir)\n\nfrom ParentDirectory import Stuff\n', NULL, 50),
(108, 'from example.example import fkt\n', NULL, 51),
(109, '├── Project\n│     ├── Dir\n│     │    ├── __init__.py\n│     │    ├── module.py\n│     │    └── standalone.py\n', NULL, 52),
(110, '#in standalone.py\nfrom Project.Dir.module import ...\n', NULL, 52),
(111, '├── dj_app\n│   ├── models.py\n│   ├── ops\n│   │   ├── bar.py\n│   │   └── foo.py\n│   ├── script.py\n│   ├── tests.py\n│   ├── utils.py\n│   └── views.py\n└── manage.py\n', NULL, 54),
(112, '# dj_app/ops/foo.py\n# Foo operation methods and classes\nfoo_val = \"foo123\"\n', NULL, 54),
(113, '# dj_app/ops/bar.py\n# Bar operations methods and classes\nbar_val = \"bar123\"\n', NULL, 54),
(114, '# dj_app/script.py\n# script to run app methods from CLI\n\n# if run directly from command line\nif __name__ == \'__main__\':\n    from ops.bar import bar_val\n    from ops.foo import foo_val\n\n# otherwise\nelse:\n    from .ops.bar import bar_val\n    from .ops.', NULL, 54),
(115, '# dj_app/tests.py\n# test cases for the app\n# do not run this directly from CLI or the imports will break\nfrom .script import script_method1\nfrom .ops.bar import bar_val\nfrom .ops.foo import foo_val \n\ndef main():\n    print(\"Running the test case\")\n   ', NULL, 54),
(116, '# manage.py\n# just run the test cases for this example\nimport dj_app.tests\ndj_app.tests.main()\n', NULL, 54),
(117, '$ python3 manage.py\nRunning the test case\ntesting script method\nthis is script_method1\nbar_val: bar123\nfoo_val: foo123\n', NULL, 54),
(118, '$ python3 dj_app/script.py\nrunning from the script\nthis is script_method1\nbar_val: bar123\nfoo_val: foo123\n', NULL, 54),
(119, '$ python3 dj_app/tests.py\nTraceback (most recent call last):\n  File \"dj_app/tests.py\", line 5, in <module>\n    from .script import script_method1\nModuleNotFoundError: No module named \'__main__.script\'; \'__main__\' is not a package\n', NULL, 54),
(120, 'import os\nimport sys\nTHIS_DIR = os.path.dirname(os.path.realpath(__file__))\nsys.path.insert(0, THIS_DIR)\nfrom script import script_method1\nsys.path.pop(0)\n', NULL, 54),
(121, '├── folder\n|   | \n│   ├── moduleA.py\n|   |   |\n|   |   └--function1()\n|   |       └~~ uses function2()\n|   | \n│   └── moduleB.py\n|       | \n|       └--function2()\n|   \n└── main.py\n     └~~ uses function1()\n', NULL, 55),
(122, 'try:\n    from .moduleB import function2 \nexcept:\n    from moduleB import function2 \n', NULL, 55),
(123, '├── classes\n|   |\n|   ├──__init__.py\n|   | \n│   ├── userclass.py\n|   |   |\n|   |   └--viewDetails()\n|   |       \n|   | \n│   └── groupclass.py\n|       | \n|       └--viewGroupDetails()\n|   \n└── start.py\n     └~~ uses function1()\n', NULL, 56),
(124, 'from .userclasss import viewDetails\n\nfrom .groupclass import viewGroupDetails\n', NULL, 56),
(125, 'from classes import viewDetails\nfrom classes import viewGroupDetails\n', NULL, 56),
(126, 'import sys\nimport pathlib as p\nimport importlib\n\npp = p.Path(sys.argv[0])\npack = pp.resolve().parent\n\npkg = importlib.import_module(\'__init__\', package=str(pack))\n', NULL, 57),
(127, 'print(pkg.Glob)\n', NULL, 57),
(128, 'import os.path\nimport sys\nPACKAGE_PARENT = \'..\'\nSCRIPT_DIR = os.path.dirname(os.path.realpath(os.path.join(os.getcwd(), os.path.expanduser(__file__))))\nsys.path.append(os.path.normpath(os.path.join(SCRIPT_DIR, PACKAGE_PARENT)))\n', NULL, 59),
(129, '/path/to/project/\n├── __init__.py\n└── main.py\n    └── mylib/\n        ├── list_util.py\n        └── args_util.py\n', NULL, 60),
(130, '#!/usr/bin/env python3\nimport sys\nimport mylib.args_util\n\nif __name__ == \'__main__\':\n    print(f\'{mylib.args_util.parseargs(sys.argv[1:])=}\')\n', NULL, 60),
(131, 'def to_int_list(args):\n    return [int(x) for x in args]\n', NULL, 60),
(132, '#!/usr/bin/env python3\nimport sys\nfrom . import list_util as lu\n\ndef parseargs(args):\n    return sum(lu.to_int_list(args))\n\nif __name__ == \'__main__\':\n    print(f\'{parseargs(sys.argv[1:])=}\')\n', NULL, 60),
(133, '$ ./main.py 1 2 3\nmylib.args_util.parseargs(sys.argv[1:])=6\n\n$ mylib/args_util.py 1 2 3\nTraceback (most recent call last):\n  File \"/path/to/project/mylib/args_util.py\", line 10, in <module>\n    from . import list_util as lu\nImportError: attempted rel', NULL, 60),
(134, '#!/bin/bash\n# -*- Mode: python -*-\n\'\'\'\'true\nexec /usr/bin/env python3 -m mylib.args_util \"$@\"\n\'\'\'\n\nimport sys\nfrom . import list_util as lu\n\ndef parseargs(args):\n    return sum(lu.to_int_list(args))\n\nif __name__ == \'__main__\':\n    print(f\'{parseargs(', NULL, 60),
(135, '$ ./main.py 1 2 3\nmylib.args_util.parseargs(sys.argv[1:])=6\n\n$ mylib/args_util.py 1 2 3\nparseargs(sys.argv[1:])=6\n', NULL, 60),
(136, '#!/bin/bash\n# -*- Mode: python -*-\n\'\'\'\'true\nexec /usr/bin/env python3 \\\n    PYTHONPATH=\"$(cd \"$(dirname \"$0\")/..\" ; pwd)\" \\\n    -m mylib.args_util \"$@\"\n\'\'\'\n', NULL, 60),
(137, 'from .mymodule import myfunction\n', NULL, 61),
(138, 'import ultraimport\nmyfunction = ultraimport(\'__dir__/mymodule.py\', \'myfunction\')\n', NULL, 61),
(139, '__all__ = [\'bar\', \'baz\']\n\nwaz = 5\nbar = 10\ndef baz(): return \'baz\'\n', NULL, 63),
(140, 'from foo import *\n\nprint(bar)\nprint(baz)\n\n# The following will trigger an exception, as \"waz\" is not exported by the module\nprint(waz)\n', NULL, 63),
(141, '__all__ = [\'foo\', \'Bar\']\n', NULL, 65),
(142, 'from module import *               # imports foo and Bar\n', NULL, 65),
(143, 'package\n├── __init__.py\n├── module_1.py\n└── module_2.py\n', NULL, 65),
(144, 'from pathlib import Path\n\npackage = Path(\'package\')\npackage.mkdir()\n\n(package / \'__init__.py\').write_text(\"\"\"\nfrom .module_1 import *\nfrom .module_2 import *\n\"\"\")\n\npackage_module_1 = package / \'module_1.py\'\npackage_module_1.write_text(\"\"\"\n__all__ = [', NULL, 65),
(145, 'import package\npackage.foo()\npackage.Bar()\n', NULL, 65),
(146, 'package\n├── __init__.py\n├── module_1\n│   ├── foo_implementation.py\n│   └── __init__.py\n└── module_2\n    ├── Bar_implementation.py\n    └── __init__.py\n', NULL, 65),
(147, 'subpackage_1 = package / \'module_1\'\nsubpackage_1.mkdir()\nsubpackage_2 = package / \'module_2\'\nsubpackage_2.mkdir()\n', NULL, 65),
(148, 'package_module_1.rename(subpackage_1 / \'foo_implementation.py\')\npackage_module_2.rename(subpackage_2 / \'Bar_implementation.py\')\n', NULL, 65),
(149, '(subpackage_1 / \'__init__.py\').write_text(\"\"\"\nfrom .foo_implementation import *\n__all__ = [\'foo\']\n\"\"\")\n(subpackage_2 / \'__init__.py\').write_text(\"\"\"\nfrom .Bar_implementation import *\n__all__ = [\'Bar\']\n\"\"\")\n', NULL, 65),
(150, '>>> import package\n>>> package.foo()\n>>> package.Bar()\n<package.module_2.Bar_implementation.Bar object at 0x7f0c2349d210>\n', NULL, 65),
(151, 'from .Bar_implementation import *\nfrom .Baz_implementation import *\n__all__ = [\'Bar\', \'Baz\']\n', NULL, 65),
(152, 'from .module_1 import *       # also constrained by __all__\'s\nfrom .module_2 import *       # in the __init__.py\'s\n__all__ = [\'foo\', \'Bar\']     # further constraining the names advertised\n', NULL, 65),
(153, 'import package\npackage.Baz()\n', NULL, 65),
(154, 'from .module_1 import *\nfrom .module_2 import *\n__all__ = [\'foo\', \'Bar\', \'Baz\']\n', NULL, 65),
(155, '$ cat us.py\nUSALLCAPS = \"all caps\"\nus_snake_case = \"snake_case\"\n_us_non_public = \"shouldn\'t import\"\n$ python\nPython 3.10.0 (default, Oct  4 2021, 17:55:55) [GCC 10.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>', NULL, 65),
(156, 'import os as _os, sys as _sys\n', NULL, 65),
(157, 'import sys\n\ndef export(fn):\n    mod = sys.modules[fn.__module__]\n    if hasattr(mod, \'__all__\'):\n        mod.__all__.append(fn.__name__)\n    else:\n        mod.__all__ = [fn.__name__]\n    return fn\n', NULL, 65),
(158, '$ cat > main.py\nfrom lib import export\n__all__ = [] # optional - we create a list if __all__ is not there.\n\n@export\ndef foo(): pass\n\n@export\ndef bar():\n    \'bar\'\n\ndef main():\n    print(\'main\')\n\nif __name__ == \'__main__\':\n    main()\n', NULL, 65),
(159, '$ cat > run.py\nimport main\nmain.main()\n\n$ python run.py\nmain\n', NULL, 65),
(160, '$ cat > run.py\nfrom main import *\nfoo()\nbar()\nmain() # expected to error here, not exported\n\n$ python run.py\nTraceback (most recent call last):\n  File \"run.py\", line 4, in <module>\n    main() # expected to error here, not exported\nNameError: name \'ma', NULL, 65),
(161, 'a = \"A\"\nb = \"B\"\nc = \"C\"\n', NULL, 67),
(162, '__all__ = [\'a\', \'b\']\n\na = \"A\"\nb = \"B\"\nc = \"C\"\n', NULL, 67),
(163, '\"\"\" cheese.py - an example module \"\"\"\n\n__all__ = [\'swiss\', \'cheddar\']\n\nswiss = 4.99\ncheddar = 3.99\ngouda = 10.99\n', NULL, 68),
(164, '>>> from cheese import *\n>>> swiss, cheddar\n(4.99, 3.99)\n>>> gouda\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name \'gouda\' is not defined\n', NULL, 68),
(165, '>>> import cheese\n>>> cheese.swiss, cheese.cheddar, cheese.gouda\n(4.99, 3.99, 10.99)\n', NULL, 68),
(166, '>>> from cheese import swiss, cheddar, gouda\n>>> swiss, cheddar, gouda\n(4.99, 3.99, 10.99)\n', NULL, 68),
(167, '>>> import cheese as ch\n>>> ch.swiss, ch.cheddar, ch.gouda\n(4.99, 3.99, 10.99)\n', NULL, 68),
(168, '__all__ = [\n    \'MySQLConnection\', \'Connect\', \'custom_error_exception\',\n\n    # Some useful constants\n    \'FieldType\', \'FieldFlag\', \'ClientFlag\', \'CharacterSet\', \'RefreshOption\',\n    \'HAVE_CEXT\',\n\n    # Error handling\n    \'Error\', \'Warning\',\n\n    ...e', NULL, 68),
(169, 'foo\n├── bar.py\n└── __init__.py\n', NULL, 70),
(170, 'from foo import *\n', NULL, 72),
(171, '__all__ = (\'some_name\',)\n', NULL, 72),
(172, 'package/\n    __init__.py\n    subpackage1/\n        __init__.py\n        moduleX.py\n    moduleA.py\n', NULL, 74),
(173, 'from .. import foo\n', NULL, 75),
(174, 'if __package__ is None or __package__ == \'\':\n    # uses current directory visibility\n    import foo\nelse:\n    # uses current package visibility\n    from . import foo\n', NULL, 75),
(175, 'if __name__ == \'__main__\':\n   # run test code here...\n', NULL, 76),
(176, '# import any site-lib modules first, then...\nimport sys\nparent_module = sys.modules[\'.\'.join(__name__.split(\'.\')[:-1]) or \'__main__\']\nif __name__ == \'__main__\' or parent_module.__name__ == \'__main__\':\n    from codex import Codex # these are in same f', NULL, 76),
(177, 'from __future__ import print_function # only when showing how this works\n\nif __package__:\n    print(\'Package named {!r}; __name__ is {!r}\'.format(__package__, __name__))\n    from .fileA import f1, f2\n    from .fileB import Class3\nelse:\n    print(\'Not', NULL, 78),
(178, '$ python2 lib.foo\n', NULL, 78),
(179, '$ python3 lib.foo\n', NULL, 78),
(180, 'Package named \'lib\'; __name__ is \'__main__\'\n', NULL, 78),
(181, '$ python2 lib.foo\nPackage named \'lib\'; __name__ is \'lib.foo\'\nPackage named \'lib\'; __name__ is \'__main__\'\n', NULL, 78),
(182, '$ python3 lib.routine\nPackage named \'lib\'; __name__ is \'lib.foo\'\n[...]/runpy.py:125: RuntimeWarning: \'lib.foo\' found in sys.modules\nafter import of package \'lib\', but prior to execution of \'lib.foo\';\nthis may result in unpredictable behaviour\n  warn(', NULL, 78),
(183, '    import os, sys\n    _i = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n    if _i not in sys.path:\n        sys.path.insert(0, _i)\n    else:\n        _i = None\n\n    from sub.fileA import f1, f2\n    from sub.fileB import Class3\n\n    if _', NULL, 78),
(184, 'import os\nimport sys\nparent_dir_name = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))\nsys.path.append(parent_dir_name + \"/your_dir\")\nimport your_script\nyour_script.a_function()\n', NULL, 79),
(185, 'package/\n    __init__.py\n    subpackage1/\n        __init__.py\n        moduleX.py\n    moduleA.py\n', NULL, 80),
(186, '#!/usr/bin/env python3\n\nimport inspect\nimport imp\nimport os\n\ndef get_script_dir(follow_symlinks=True):\n    \"\"\"\n    Return directory of code defining this very function.\n    Should work from a module as well as from a script.\n    \"\"\"\n    script_path =', NULL, 81),
(187, '#!/usr/bin/env python3\n\nif __name__ == \'__main__\' and __package__ is None:\n    from os import sys, path\n    # __file__ should be defined in this case\n    PARENT_DIR = path.dirname(path.dirname(path.abspath(__file__)))\n   sys.path.append(PARENT_DIR)\nf', NULL, 81),
(188, 'import ultraimport\nfoo = ultraimport(\'__dir__/foo.py\')\n', NULL, 83),
(189, '#dir/package/module1/foo.py\n\n#dir/package/module2/bar.py\nfrom ..module1 import foo\n', NULL, 85),
(190, 'd = {\'key\': \'value\'}\nprint(d)  # {\'key\': \'value\'}\n\nd[\'mynewkey\'] = \'mynewvalue\'\n\nprint(d)  # {\'key\': \'value\', \'mynewkey\': \'mynewvalue\'}\n', NULL, 86),
(191, '>>> x = {1:2}\n>>> print(x)\n{1: 2}\n\n>>> d = {3:4, 5:6, 7:8}\n>>> x.update(d)\n>>> print(x)\n{1: 2, 3: 4, 5: 6, 7: 8}\n', NULL, 87),
(192, 'data = {}\n# OR\ndata = dict()\n', NULL, 88),
(193, 'data = {\'a\': 1, \'b\': 2, \'c\': 3}\n# OR\ndata = dict(a=1, b=2, c=3)\n# OR\ndata = {k: v for k, v in ((\'a\', 1), (\'b\',2), (\'c\',3))}\n', NULL, 88),
(194, 'data[\'a\'] = 1  # Updates if \'a\' exists, else adds \'a\'\n# OR\ndata.update({\'a\': 1})\n# OR\ndata.update(dict(a=1))\n# OR\ndata.update(a=1)\n', NULL, 88),
(195, 'data.update({\'c\':3,\'d\':4})  # Updates \'c\' and adds \'d\'\n', NULL, 88),
(196, 'data |= {\'c\':3,\'d\':4}\n', NULL, 88),
(197, 'data3 = {}\ndata3.update(data)  # Modifies data3, not data\ndata3.update(data2)  # Modifies data3, not data2\n', NULL, 88),
(198, 'data = {**data1, **data2, **data3}\n', NULL, 88),
(199, 'data = data1 | {\'c\':3,\'d\':4}\n', NULL, 88),
(200, 'del data[key]  # Removes specific element in a dictionary\ndata.pop(key)  # Removes the key & returns the value\ndata.clear()  # Clears entire dictionary\n', NULL, 88),
(201, 'key in data\n', NULL, 88),
(202, 'for key in data: # Iterates just through the keys, ignoring the values\nfor key, value in d.items(): # Iterates through the pairs\nfor key in d.keys(): # Iterates just through key, ignoring the values\nfor value in d.values(): # Iterates just through va', NULL, 88),
(203, 'data = dict(zip(list_with_keys, list_with_values))\n', NULL, 88),
(204, 'my_dict = {}\n', NULL, 89),
(205, 'my_dict[\'new key\'] = \'new value\'\n', NULL, 89),
(206, '{\'new key\': \'new value\'}\n', NULL, 89),
(207, 'my_dict.update({\'key 2\': \'value 2\', \'key 3\': \'value 3\'})\n', NULL, 89),
(208, '{\'key 2\': \'value 2\', \'key 3\': \'value 3\', \'new key\': \'new value\'}\n', NULL, 89),
(209, 'my_dict.update(foo=\'bar\', foo2=\'baz\')\n', NULL, 89),
(210, '{\'key 2\': \'value 2\', \'key 3\': \'value 3\', \'new key\': \'new value\', \n \'foo\': \'bar\', \'foo2\': \'baz\'}\n', NULL, 89),
(211, '>>> d = {}\n>>> d.__setitem__(\'foo\', \'bar\')\n>>> d\n{\'foo\': \'bar\'}\n\n\n>>> def f():\n...     d = {}\n...     for i in xrange(100):\n...         d[\'foo\'] = i\n... \n>>> def g():\n...     d = {}\n...     for i in xrange(100):\n...         d.__setitem__(\'foo\', i)\n..', NULL, 89),
(212, 'dictionary[key] = value\n', NULL, 90),
(213, 'dictionary = {}\ndictionary[\"new key\"] = \"some new entry\" # add new dictionary entry\ndictionary[\"dictionary_within_a_dictionary\"] = {} # this is required by python\ndictionary[\"dictionary_within_a_dictionary\"][\"sub_dict\"] = {\"other\" : \"dictionary\"}\npri', NULL, 91),
(214, '{\'new key\': \'some new entry\', \'dictionary_within_a_dictionary\': {\'sub_dict\': {\'other\': \'dictionarly\'}}}\n', NULL, 91),
(215, 'dictionary[\"dictionary_within_a_dictionary\"] = {}\n', NULL, 91),
(216, 'd.__setitem__(key, value)\n', NULL, 92),
(217, 'class myDict(dict):\n\n    def __init__(self):\n        self = dict()\n\n    def add(self, key, value):\n        self[key] = value\n\n## example\n\nmyd = myDict()\nmyd.add(\'apples\',6)\nmyd.add(\'bananas\',3)\nprint(myd)\n', NULL, 93),
(218, '>>> \n{\'apples\': 6, \'bananas\': 3}\n', NULL, 93),
(219, 'c = dict( a, **b ) ## see also https://stackoverflow.com/q/2255878\nc = dict( list(a.items()) + list(b.items()) )\nc = dict( i for d in [a,b] for i in d.items() )\n', NULL, 94),
(220, 'c = dict( a, **{\'d\':\'dog\'} ) ## returns a dictionary based on \'a\'\n', NULL, 94),
(221, 'def functional_dict_add( dictionary, key, value ):\n   temp = dictionary.copy()\n   temp[key] = value\n   return temp\n\nc = functional_dict_add( a, \'d\', \'dog\' )\n', NULL, 94),
(222, 'params = {\'a\': 1, \'b\': 2}\nnew_params = {**params, **{\'c\': 3}}\n', NULL, 95),
(223, 'params = {\'a\': 1, \'b\': 2}\nnew_params = dict(params, **{\'c\': 3})\n', NULL, 95),
(224, 'params = {\'a\': 1, \'b\': 2}\nnew_params = params.copy()\nnew_params[\'c\'] = 3\n', NULL, 95),
(225, 'params = {\'a\': 1, \'b\': 2}\nnew_params = params.copy()\nnew_params.update({\'c\': 3})\n', NULL, 95),
(226, 'value = my_dict.setdefault(key, default)\n', NULL, 96),
(227, 'try:\n    value = my_dict[key]\nexcept KeyError: # key not found\n    value = my_dict[key] = default\n', NULL, 96),
(228, '>>> mydict = {\'a\':1, \'b\':2, \'c\':3}\n>>> mydict.setdefault(\'d\', 4)\n4 # returns new value at mydict[\'d\']\n>>> print(mydict)\n{\'a\':1, \'b\':2, \'c\':3, \'d\':4} # a new key/value pair was indeed added\n# but see what happens when trying it on an existing key...\n>', NULL, 96),
(229, 'new_dict = {**mydict, \'new_key\': new_val}\n', NULL, 97),
(230, 'new_dict = dict(mydict, new_key=new_val)\n', NULL, 97),
(231, 'import timeit\n\ntimeit.timeit(\'dictionary = {\"karga\": 1, \"darga\": 2}; dictionary.update({\"aaa\": 123123, \"asd\": 233})\')\n>> 0.49582505226135254\n\ntimeit.timeit(\'dictionary = {\"karga\": 1, \"darga\": 2}; dictionary[\"aaa\"] = 123123; dictionary[\"asd\"] = 233;\')', NULL, 98),
(232, '>>> foo = dict(a=1,b=2)\n>>> foo\n{\'a\': 1, \'b\': 2}\n>>> goo = dict(c=3,**foo)\n>>> goo\n{\'c\': 3, \'a\': 1, \'b\': 2}\n', NULL, 99),
(233, '>>> foo = dict(a=1,b=2,c=3,d=4)\n>>> new_dict = {k: v for k, v in list(foo.items())[:2]}\n>>> new_dict\n{\'a\': 1, \'b\': 2}\n>>> new_dict.update(newvalue=99)\n>>> new_dict\n{\'a\': 1, \'b\': 2, \'newvalue\': 99}\n>>> new_dict.update({k: v for k, v in list(foo.items(', NULL, 99),
(234, 'a={1:2,3:4}\na.get(1)\n2\na.get(5)\nNone\n', NULL, 100),
(235, 'class myDict(dict):\n\n    def __init__(self):\n        self = dict()\n\n    def add(self, key, value):\n        #self[key] = value # add new key and value overwriting any exiting same key\n        if self.get(key)!=None:\n            print(\'key\', key, \'alre', NULL, 101),
(236, '>>> from collections import defaultdict\n>>> example = defaultdict(int)\n>>> example[\'key\'] += 1\n>>> example[\'key\']\ndefaultdict(<class \'int\'>, {\'key\': 1})\n', NULL, 102),
(237, '>>> example = dict()\n>>> example[\'key\'] += 1\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nKeyError: \'key\'\n', NULL, 102),
(238, '# This type of code would often be inside a loop\nif \'key\' not in example:\n    example[\'key\'] = 0  # add key and initial value to dict; could also be a list\nexample[\'key\'] += 1  # this is implementing a counter\n', NULL, 102),
(239, '>>> example = defaultdict(list)\n>>> example[\'key\'].append(1)\n>>> example\ndefaultdict(<class \'list\'>, {\'key\': [1]})\n', NULL, 102),
(240, '        # Inserting/Updating single value\n        # subscript notation method\n        d[\'mynewkey\'] = \'mynewvalue\' # Updates if \'a\' exists, else adds \'a\'\n        # OR\n        d.update({\'mynewkey\': \'mynewvalue\'})\n        # OR\n        d.update(dict(\'my', NULL, 103),
(241, '>>> x = [1, 2, 3]\n>>> x.append([4, 5])\n>>> print(x)\n[1, 2, 3, [4, 5]]\n', NULL, 104),
(242, '>>> x = [1, 2, 3]\n>>> x.extend([4, 5])\n>>> print(x)\n[1, 2, 3, 4, 5]\n', NULL, 104),
(243, '>>> xs = [\'A\', \'B\']\n>>> xs\n[\'A\', \'B\']\n\n>>> xs.append(\"D\")\n>>> xs\n[\'A\', \'B\', \'D\']\n\n>>> xs.append([\"E\", \"F\"])\n>>> xs\n[\'A\', \'B\', \'D\', [\'E\', \'F\']]\n\n>>> xs.insert(2, \"C\")\n>>> xs\n[\'A\', \'B\', \'C\', \'D\', [\'E\', \'F\']]\n\n>>> xs.extend([\"G\", \"H\"])\n>>> xs\n[\'A\', \'B\',', NULL, 105),
(244, 'my_list.append(object) \n', NULL, 106),
(245, '>>> my_list\n[\'foo\', \'bar\']\n>>> my_list.append(\'baz\')\n>>> my_list\n[\'foo\', \'bar\', \'baz\']\n', NULL, 106),
(246, '>>> another_list = [1, 2, 3]\n>>> my_list.append(another_list)\n>>> my_list\n[\'foo\', \'bar\', \'baz\', [1, 2, 3]]\n                     #^^^^^^^^^--- single item at the end of the list.\n', NULL, 106),
(247, 'my_list.extend(iterable)\n', NULL, 106),
(248, '>>> my_list\n[\'foo\', \'bar\']\n>>> another_list = [1, 2, 3]\n>>> my_list.extend(another_list)\n>>> my_list\n[\'foo\', \'bar\', 1, 2, 3]\n', NULL, 106),
(249, '>>> my_list.extend(\'baz\')\n>>> my_list\n[\'foo\', \'bar\', 1, 2, 3, \'b\', \'a\', \'z\']\n', NULL, 106),
(250, '    /* This over-allocates proportional to the list size, making room\n     * for additional growth.  The over-allocation is mild, but is\n     * enough to give linear-time amortized behavior over a long\n     * sequence of appends() in the presence of ', NULL, 106),
(251, 'def append(alist, iterable):\n    for item in iterable:\n        alist.append(item)\n        \ndef extend(alist, iterable):\n    alist.extend(iterable)\n', NULL, 106),
(252, 'import timeit\n\n>>> min(timeit.repeat(lambda: append([], \"abcdefghijklmnopqrstuvwxyz\")))\n2.867846965789795\n>>> min(timeit.repeat(lambda: extend([], \"abcdefghijklmnopqrstuvwxyz\")))\n0.8060121536254883\n', NULL, 106),
(253, 'def append_one(a_list, element):\n    a_list.append(element)\n\ndef extend_one(a_list, element):\n    \"\"\"creating a new list is semantically the most direct\n    way to create an iterable to give to extend\"\"\"\n    a_list.extend([element])\n\nimport timeit\n', NULL, 106),
(254, '>>> min(timeit.repeat(lambda: append_one([], 0)))\n0.2082819009956438\n>>> min(timeit.repeat(lambda: extend_one([], 0)))\n0.2397019260097295\n', NULL, 106),
(255, '>>> a = [1, 2, 3]\n>>> a.append([4, 5, 6])\n>>> a\n[1, 2, 3, [4, 5, 6]]\n', NULL, 107),
(256, '>>> a = [1,2]\n>>> a.append(3)\n>>> a\n[1,2,3]\n', NULL, 108),
(257, '>>> a.append([4,5])\n>>> a\n>>> [1,2,3,[4,5]]\n', NULL, 108),
(258, '>>> a = [1,2]\n>>> a.extend([3])\n>>> a\n[1,2,3]\n', NULL, 108),
(259, '>>> a.extend([4,5,6])\n>>> a\n[1,2,3,4,5,6]\n', NULL, 108),
(260, '>>> x = [1,2]\n>>> x.append(3)\n>>> x\n[1,2,3]\n', NULL, 108),
(261, '>>> x = [1,2]\n>>> x.extend([3])\n>>> x\n[1,2,3]\n', NULL, 108),
(262, '>>> x = [1,2]\n>>> x.append([3,4])\n>>> x\n[1,2,[3,4]]\n', NULL, 108),
(263, '>>> z = [1,2] \n>>> z.extend([3,4])\n>>> z\n[1,2,3,4]\n', NULL, 108),
(264, 'for item in iterator:\n    a_list.append(item)\n', NULL, 109),
(265, 'a_list.extend(iterator)\n', NULL, 109),
(266, 'x = [1, 2, 3]\nx.append([4, 5])\nx.append(\'abc\')\nprint(x)\n# gives you\n[1, 2, 3, [4, 5], \'abc\']\n', NULL, 110),
(267, 'x = [1, 2, 3]\nx.extend([4, 5])\nx.extend(\'abc\')\nprint(x)\n# gives you\n[1, 2, 3, 4, 5, \'a\', \'b\', \'c\']\n', NULL, 110),
(268, 'l1=range(10)\n\nl1+[11]\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11]\n\nl2=range(10,1,-1)\n\nl1+l2\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2]\n', NULL, 111),
(269, 'x = [20]\n# List passed to the append(object) method is treated as a single object.\nx.append([21, 22, 23])\n# Hence the resultant list length will be 2\nprint(x)\n--> [20, [21, 22, 23]]\n', NULL, 112),
(270, 'x = [20]\n# The parameter passed to extend(list) method is treated as a list.\n# Eventually it is two lists being concatenated.\nx.extend([21, 22, 23])\n# Here the resultant list\'s length is 4\nprint(x)\n[20, 21, 22, 23]\n', NULL, 112),
(271, '>>> x = [1,2,3]\n>>> x\n[1, 2, 3]\n>>> x = x + [4,5,6] # Extend\n>>> x\n[1, 2, 3, 4, 5, 6]\n>>> x = x + [[7,8]] # Append\n>>> x\n[1, 2, 3, 4, 5, 6, [7, 8]]\n', NULL, 113),
(272, 'list2d = [[1,2,3],[4,5,6], [7], [8,9]]\n', NULL, 114),
(273, '>>>\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n', NULL, 114),
(274, 'def from_iterable(iterables):\n    # chain.from_iterable([\'ABC\', \'DEF\']) --> A B C D E F\n    for it in iterables:\n        for element in it:\n            yield element\n', NULL, 114),
(275, 'import itertools\nlist2d = [[1,2,3],[4,5,6], [7], [8,9]]\nmerged = list(itertools.chain.from_iterable(list2d))\n', NULL, 114),
(276, 'merged = []\nmerged.extend(itertools.chain.from_iterable(list2d))\nprint(merged)\n>>>\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n', NULL, 114),
(277, '>> a = [1, 2, 3, 4]\n>> a.append(5)\n>> print(a)\n>> a = [1, 2, 3, 4, 5]\n', NULL, 115),
(278, '>> a = [1, 2, 3, 4]\n>> a.append([5, 6])\n>> print(a)\n>> a = [1, 2, 3, 4, [5, 6]]\n', NULL, 115),
(279, '>> a = [1, 2, 3, 4]\n>> b = [5, 6, 7, 8]\n>> a.extend(b)\n>> print(a)\n>> a = [1, 2, 3, 4, 5, 6, 7, 8]\n', NULL, 115),
(280, '>> a = [1, 2, 3, 4]\n>> a.extend([5, 6])\n>> print(a)\n>> a = [1, 2, 3, 4, 5, 6]\n', NULL, 115),
(281, 'list1 = [123, 456, 678]\nlist2 = [111, 222]\n', NULL, 117),
(282, 'result = [123, 456, 678, [111, 222]]\n', NULL, 117),
(283, 'result = [123, 456, 678, 111, 222]\n', NULL, 117),
(284, 'lis = [1, 2, 3]\n\n# \'extend\' is equivalent to this\nlis = lis + list(iterable)\n\n# \'append\' simply appends its argument as the last element to the list\n# as long as the argument is a valid Python object\nlist.append(object)\n', NULL, 118),
(285, 'l1 = [\'a\', \'b\', \'c\']\nl2 = [\'d\', \'e\', \'f\']\nl1.append(l2)\nl1\n[\'a\', \'b\', \'c\', [\'d\', \'e\', \'f\']]\n', NULL, 120),
(286, '# Reset l1 = [\'a\', \'b\', \'c\']\nl1.extend(l2)\nl1\n[\'a\', \'b\', \'c\', \'d\', \'e\', \'f\']\n', NULL, 120),
(287, 'list_methods = {\'Add\': {\'extend\', \'append\', \'insert\'},\n                \'Remove\': {\'pop\', \'remove\', \'clear\'}\n                \'Sort\': {\'reverse\', \'sort\'},\n                \'Search\': {\'count\', \'index\'},\n                \'Copy\': {\'copy\'},\n                }', NULL, 120),
(288, '>>> a\n[1, 2, 3]\na.extend([4])  #is eqivalent of a[len(a):] = [4]\n>>> a\n[1, 2, 3, 4]\na = [1, 2, 3]\n>>> a\n[1, 2, 3]\n>>> a[len(a):] = [4]\n>>> a\n[1, 2, 3, 4]\n', NULL, 121),
(289, 'def append_o(a_list, element):\n    a_list.append(element)\n    print(\'append:\', end = \' \')\n    for item in a_list:\n        print(item, end = \',\')\n    print()\n\ndef extend_o(a_list, element):\n    a_list.extend(element)\n    print(\'extend:\', end = \' \')\n  ', NULL, 122),
(290, 'append: ab,cd,\nextend: ab,c,d,\nappend: ab,[\'cd\', \'ef\'],\nextend: ab,cd,ef,\nappend: ab,[\'cd\'],\nextend: ab,cd,\n', NULL, 122),
(291, 'my_list = [1,2,3,4]\n', NULL, 123),
(292, 'my_list.append(5)\n', NULL, 123),
(293, 'Example: my_list = [1,2,3,4]\nmy_list[4, \'a\']\nmy_list\n[1,2,3,4,\'a\']\n', NULL, 123),
(294, 'a = [1,2]\nb = [3]\na.append(b)\nprint (a)\n[1,2,[3]]\n', NULL, 123),
(295, 'a = [1,2]\nb = [3]\na.extend(b)\nprint (a)\n[1,2,3]\n', NULL, 123),
(296, 'a = [1]\nb = [2]\nc = [3]\na.extend(b+c)\nprint (a)\n[1,2,3]\n', NULL, 123),
(297, 'new_list = old_list.copy()\n', NULL, 124),
(298, 'new_list = old_list[:]\n', NULL, 124),
(299, 'new_list = list(old_list)\n', NULL, 124),
(300, 'import copy\nnew_list = copy.copy(old_list)\n', NULL, 124),
(301, 'import copy\nnew_list = copy.deepcopy(old_list)\n', NULL, 124),
(302, 'import copy\n\nclass Foo(object):\n    def __init__(self, val):\n         self.val = val\n\n    def __repr__(self):\n        return \'Foo({!r})\'.format(self.val)\n\nfoo = Foo(1)\n\na = [\'foo\', foo]\nb = a.copy()\nc = a[:]\nd = list(a)\ne = copy.copy(a)\nf = copy.deep', NULL, 124),
(303, 'original: [\'foo\', Foo(5), \'baz\']\nlist.copy(): [\'foo\', Foo(5)]\nslice: [\'foo\', Foo(5)]\nlist(): [\'foo\', Foo(5)]\ncopy: [\'foo\', Foo(5)]\ndeepcopy: [\'foo\', Foo(1)]\n', NULL, 124),
(304, 'from copy import deepcopy\n\nclass old_class:\n    def __init__(self):\n        self.blah = \'blah\'\n\nclass new_class(object):\n    def __init__(self):\n        self.blah = \'blah\'\n\ndignore = {str: None, unicode: None, int: None, type(None): None}\n\ndef Copy(o', NULL, 125),
(305, 'newlist = old_list.copy()\n', NULL, 126),
(306, 'a_copy = a_list.copy()\n', NULL, 127),
(307, 'a_copy = a_list[:]\n', NULL, 127),
(308, 'a_copy = a_list[:]\n', NULL, 127),
(309, 'a_copy = list(a_list)\n', NULL, 127),
(310, '>>> timeit\n>>> l = range(20)\n>>> min(timeit.repeat(lambda: l[:]))\n0.30504298210144043\n>>> min(timeit.repeat(lambda: list(l)))\n0.40698814392089844\n', NULL, 127),
(311, 'a_copy = a_list.copy()\n', NULL, 127),
(312, '>>> import timeit\n>>> l = list(range(20))\n>>> min(timeit.repeat(lambda: l[:]))\n0.38448613602668047\n>>> min(timeit.repeat(lambda: list(l)))\n0.6309100328944623\n>>> min(timeit.repeat(lambda: l.copy()))\n0.38122922903858125\n', NULL, 127),
(313, '>>> l = [[], [], []]\n>>> l_copy = l[:]\n>>> l_copy\n[[], [], []]\n>>> l_copy[0].append(\'foo\')\n>>> l_copy\n[[\'foo\'], [], []]\n>>> l\n[[\'foo\'], [], []]\n', NULL, 127),
(314, 'import copy\na_deep_copy = copy.deepcopy(a_list)\n', NULL, 127),
(315, '>>> import copy\n>>> l\n[[\'foo\'], [], []]\n>>> l_deep_copy = copy.deepcopy(l)\n>>> l_deep_copy[0].pop()\n\'foo\'\n>>> l_deep_copy\n[[], [], []]\n>>> l\n[[\'foo\'], [], []]\n', NULL, 127),
(316, 'problematic_deep_copy = eval(repr(a_list))\n', NULL, 127),
(317, '>>> import timeit\n>>> import copy\n>>> l = range(10)\n>>> min(timeit.repeat(lambda: copy.deepcopy(l)))\n27.55826997756958\n>>> min(timeit.repeat(lambda: eval(repr(l))))\n29.04534101486206\n', NULL, 127),
(318, '>>> import timeit\n>>> import copy\n>>> l = list(range(10))\n>>> min(timeit.repeat(lambda: copy.deepcopy(l)))\n16.84255409205798\n>>> min(timeit.repeat(lambda: eval(repr(l))))\n34.813894678023644\n', NULL, 127),
(319, 'list_1 = [\'01\', \'98\']\nlist_2 = [[\'01\', \'98\']]\n', NULL, 128),
(320, 'copy = list_1\n', NULL, 128),
(321, 'print(id(copy))\nprint(id(list_1))\n', NULL, 128),
(322, '4329485320\n4329485320\n', NULL, 128),
(323, 'copy[0] = \"modify\"\n\nprint(copy)\nprint(list_1)\n', NULL, 128),
(324, '[\'modify\', \'98\']\n[\'modify\', \'98\']\n', NULL, 128),
(325, 'copy_1 = list_1[:]\n', NULL, 128),
(326, 'print(id(copy_1))\nprint(id(list_1))\n\n4338792136\n4338791432\n', NULL, 128),
(327, 'copy_1[0] = \"modify\"\n\nprint(list_1)\nprint(copy_1)\n', NULL, 128),
(328, '[\'01\', \'98\']\n[\'modify\', \'98\']\n', NULL, 128),
(329, 'copy_2 = list_2[:]\n', NULL, 128),
(330, 'print(id((list_2)), id(copy_2))\n', NULL, 128),
(331, '4330403592 4330403528\n', NULL, 128),
(332, 'copy_2[0][1] = \"modify\"\n\nprint(list_2, copy_2)\n', NULL, 128),
(333, '[[\'01\', \'modify\']] [[\'01\', \'modify\']]\n', NULL, 128),
(334, 'copy_2 = list_2[:]\n', NULL, 128),
(335, 'print(id(copy_2[0]))\nprint(id(list_2[0]))\n', NULL, 128),
(336, '4329485832\n4329485832\n', NULL, 128),
(337, 'from copy import deepcopy\ndeep = deepcopy(list_2)\n', NULL, 128),
(338, 'print(id((list_2)), id(deep))\n\n4322146056 4322148040\n', NULL, 128),
(339, 'print(id(deep[0]))\nprint(id(list_2[0]))\n', NULL, 128),
(340, '4322145992\n4322145800\n', NULL, 128),
(341, 'deep[0][1] = \"modify\"\nprint(list_2, deep)\n', NULL, 128),
(342, '[[\'01\', \'98\']] [[\'01\', \'modify\']]\n', NULL, 128),
(343, 'new_list = list(my_list)  # or my_list[:], but I prefer this syntax\n# is simply a shorter way of:\nnew_list = [element for element in my_list]\n', NULL, 129),
(344, 'import copy  \n# each element must have __copy__ defined for this...\nnew_list = [copy.copy(element) for element in my_list]\n', NULL, 129),
(345, 'import copy\n# each element must have __deepcopy__ defined for this...\nnew_list = copy.deepcopy(my_list)\n', NULL, 129),
(346, '>>> a = [1,2]\n>>> b = a[:]\n>>> a += [3]\n>>> a\n[1, 2, 3]\n>>> b\n[1, 2]\n>>> \n', NULL, 130),
(347, 'METHOD                TIME TAKEN\nb = [*a]               2.75180600000021\nb = a * 1              3.50215399999990\nb = a[:]               3.78278899999986  # Python 2 winner (see above)\nb = a.copy()           4.20556500000020  # Python 3 \"slice equival', NULL, 131),
(348, 'import timeit\n\nCOUNT = 50000000\nprint(\"Array duplicating. Tests run\", COUNT, \"times\")\nsetup = \'a = [0,1,2,3,4,5,6,7,8,9]; import copy\'\n\nprint(\"b = list(a)\\t\\t\", timeit.timeit(stmt=\'b = list(a)\', setup=setup, number=COUNT))\nprint(\"b = copy.copy(a)\\t\",', NULL, 131),
(349, 'old_list = [1, 2, 3]\n\nnew_list = [*old_list]\n\nnew_list.append(4)\nold_list == [1, 2, 3]\nnew_list == [1, 2, 3, 4]\n', NULL, 134),
(350, 'x = [random.random() for _ in range(1000)]\n\n%timeit a = list(x)\n%timeit a = x.copy()\n%timeit a = x[:]\n\n%timeit a = [*x]\n\n#: 2.47 µs ± 38.1 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n#: 2.47 µs ± 54.6 ns per loop (mean ± std. dev. of ', NULL, 134),
(351, 'new_list = my_list[:]\n', NULL, 135),
(352, 'new_list = list(old_list)\n', NULL, 135),
(353, 'import copy\nnew_list = copy.deepcopy(old_list)\n', NULL, 135),
(354, 'new_list = my_list * 1       # Solution 1 when you are not using nested lists\n', NULL, 136),
(355, 'import copy\nnew_list = copy.deepcopy(my_list)   # Solution 2 when you are using nested lists\n', NULL, 136),
(356, 'new_list = my_list[:]\n', NULL, 136),
(357, '>>> a = range(5)\n>>> b = a*1\n>>> a,b\n([0, 1, 2, 3, 4], [0, 1, 2, 3, 4])\n>>> a[2] = 55\n>>> a,b\n([0, 1, 55, 3, 4], [0, 1, 2, 3, 4])\n', NULL, 136),
(358, '>>> from copy import deepcopy\n>>> a = [range(i,i+4) for i in range(3)]\n>>> a\n[[0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5]]\n>>> b = a*1\n>>> c = deepcopy(a)\n>>> for i in (a, b, c): print i\n[[0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5]]\n[[0, 1, 2, 3], [1, 2, 3', NULL, 136),
(359, 'def deepcopy(x):\n  immutables = (str, int, bool, float)\n  mutables = (list, dict, tuple)\n  if isinstance(x, immutables):\n    return x\n  elif isinstance(x, mutables):\n    if isinstance(x, tuple):\n      return tuple(deepcopy(list(x)))\n    elif isinstan', NULL, 137),
(360, '[x for x in _list]\n', NULL, 137),
(361, '[deepcopy_list(x) for x in _list]\n', NULL, 137),
(362, 'def deepcopy_list(x):\n  if isinstance(x, (str, bool, float, int)):\n    return x\n  else:\n    return [deepcopy_list(y) for y in x]\n', NULL, 137),
(363, 'import copy\n\nclass MyList(list):\n    pass\n\nlst = MyList([1,2,3])\n\nlst.name = \'custom list\'\n\nd = {\n\'original\': lst,\n\'slicecopy\' : lst[:],\n\'lstcopy\' : lst.copy(),\n\'copycopy\': copy.copy(lst),\n\'deepcopy\': copy.deepcopy(lst)\n}\n\n\nfor k,v in d.items():\n    ', NULL, 138),
(364, 'lst: original, name: custom list\nlst: slicecopy, name: NA\nlst: lstcopy, name: NA\nlst: copycopy, name: custom list\nlst: deepcopy, name: custom list\n', NULL, 138),
(365, '    list1 = [\'apples\',\'bananas\',\'pineapples\']\n    list2 = list1\n', NULL, 139),
(366, '>>> b = a = [\'hell\', \'word\']\n>>> c = [\'hell\', \'word\']\n\n>>> id(a), id(b), id(c)\n(4424020872, 4424020872, 4423979272) \n     |           |\n      -----------\n\n>>> id(a[0]), id(b[0]), id(c[0])\n(4424018328, 4424018328, 4424018328) # all referring to same \'', NULL, 140),
(367, 'from copy import deepcopy\n\na = [   [ list(range(1, 3)) for i in range(3) ]   ]\nb = deepcopy(a)\nb[0][1]=[3]\nprint(\'Deep:\')\nprint(a)\nprint(b)\nprint(\'-----------------------------\')\na = [   [ list(range(1, 3)) for i in range(3) ]   ]\nb = a*1\nb[0][1]=[3]', NULL, 141),
(368, 'Deep:\n[[[1, 2], [1, 2], [1, 2]]]\n[[[1, 2], [3], [1, 2]]]\n-----------------------------\n*1:\n[[[1, 2], [3], [1, 2]]]\n[[[1, 2], [3], [1, 2]]]\n-----------------------------\nVector copy:\n[[[1, 2], [3], [1, 2]]]\n[[[1, 2], [3], [1, 2]]]\n--------------------', NULL, 141),
(369, 'int my_list[] = [1,2,3,4];\nint *new_list;\nnew_list = my_list;\n', NULL, 142),
(370, 'import copy\nnew_list = copy.deepcopy(my_list)\n', NULL, 142),
(371, 'from random import randint\nfrom time import time\nimport copy\n\nitem_count = 100000\n\ndef copy_type(l1: list, l2: list):\n  if l1 == l2:\n    return \'shallow\'\n  return \'deep\'\n\ndef run_time(start, end):\n  run = end - start\n  return int(run * 1000000)\n\ndef ', NULL, 143),
(372, '[{\"list[dict]\": [\n  {\"method\": \"unpack\", \"copy_type\": \"shallow\", \"time_µs\": 56149},\n  {\"method\": \"extend\", \"copy_type\": \"shallow\", \"time_µs\": 52991},\n  {\"method\": \"combine\", \"copy_type\": \"shallow\", \"time_µs\": 53726},\n  {\"method\": \"deepcopy\", \"copy_ty', NULL, 143);
INSERT INTO `code` (`id`, `answer_code`, `code_lang`, `answer_id`) VALUES
(373, 'l = [1,2,3]\nl2 = l + []\nprint(l,l2)\nl[0] = \'a\'\nprint(l,l2)\n', NULL, 144),
(374, 'py -3 -m ensurepip\n', NULL, 145),
(375, 'python get-pip.py\n', NULL, 145),
(376, 'pip install httpie\n', NULL, 145),
(377, 'http://proxy_url:port\nhttp://username:password@proxy_url:port\n', NULL, 145),
(378, 'python get-pip.py\n', NULL, 147),
(379, 'cinst python\ncinst easy.install\ncinst pip\n', NULL, 151),
(380, 'python -c \"exec(\'try: from urllib2 import urlopen \\nexcept: from urllib.request import urlopen\');f=urlopen(\'https://bootstrap.pypa.io/get-pip.py\').read();exec(f)\"\n', NULL, 152),
(381, 'hg clone https://bitbucket.org/tarek/distribute\ncd distribute\nhg checkout 0.6.27\nrem optionally, comment out tag_build and tag_svn_revision in setup.cfg\nmsvc-build-launcher.cmd\npython setup.py bdist_win32\ncd ..\necho build is in distribute\\dist\n', NULL, 153),
(382, 'git clone https://github.com/pypa/pip.git\ncd pip\ngit checkout 1.1\npython setup.py bdist_win32\ncd ..\necho build is in pip\\dist\n', NULL, 153),
(383, 'C:\\Python27\\Scripts\n', NULL, 154),
(384, 'pip install virtualenv\n', NULL, 154),
(385, 'error: Unable to find vcvarsall.bat\n', NULL, 154),
(386, ' pip install google\n', NULL, 155),
(387, '$ source <venv>/bin/activate \n\nC:\\> <venv>\\Scripts\\activate.bat\n', NULL, 156),
(388, 'python virtualenv.py myvirtualenv\n', NULL, 157),
(389, 'New python executable in myvirtualenv\\Scripts\\python.exe\nInstalling setuptools....................................done.\nInstalling pip.........................done.\n', NULL, 157),
(390, 'myvirtualenv\\Scripts\\activate\n', NULL, 157),
(391, '(myvirtualenv) PATH\\TO\\YOUR\\PROJECT\\FOLDER>pip install package_name\n', NULL, 157),
(392, ' [HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Python\\PythonCore\\2.6\\InstallPath]\n @=\"C:\\\\Python26\\\\\"\n', NULL, 159),
(393, ' [HKEY_LOCAL_MACHINE\\SOFTWARE\\Python\\PythonCore\\2.6\\InstallPath]\n @=\"C:\\\\Python26\\\\\"\n', NULL, 159),
(394, 'curl http://python-distribute.org/distribute_setup.py | python\ncurl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n', NULL, 160),
(395, '> conda install <package>               # access distributed binaries\n\n> pip install <package>                 # access PyPI packages \n', NULL, 162),
(396, 'pip install virtualenv\n', NULL, 164),
(397, 'virtualenv venv\n', NULL, 164),
(398, 'Step 1: wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py\nStep 2: wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py\nStep 2: python ez_setup.py\nStep 3: python get-pip.py\n', NULL, 166),
(399, 'Downloading/unpacking beautifulsoup4\n  Getting page https://pypi.python.org/simple/beautifulsoup4/\n  Could not fetch URL https://pypi.python.org/simple/beautifulsoup4/: **connection error: [Errno 1] _ssl.c:504: error:14090086:SSL routines:SSL3_GET_SE', NULL, 167),
(400, 'pip install requests\n', NULL, 167),
(401, 'curl --http1.1 https://bootstrap.pypa.io/get-pip.py --output get-pip.py\n', NULL, 168),
(402, 'python get-pip.py\n', NULL, 168),
(403, 'pip install awesome_package_name\n', NULL, 168),
(404, 'python -m ensurepip\n', NULL, 169),
(405, 'pip install --trusted-host pypi.python.org --upgrade pip\n', NULL, 170),
(406, 'python -m pip install -U pip\n', NULL, 171),
(407, 'python get-pip.py\n', NULL, 171),
(408, 'pip -V\n', NULL, 172),
(409, 'python get-pip.py\n', NULL, 172),
(410, 'from pathlib import Path\nPath(\"/my/directory\").mkdir(parents=True, exist_ok=True)\n', NULL, 175),
(411, 'import os\nif not os.path.exists(directory):\n    os.makedirs(directory)\n', NULL, 175),
(412, 'import os, errno\n\ntry:\n    os.makedirs(directory)\nexcept OSError as e:\n    if e.errno != errno.EEXIST:\n        raise\n', NULL, 175),
(413, 'try:\n    os.makedirs(\"path/to/directory\")\nexcept FileExistsError:\n    # directory already exists\n    pass\n', NULL, 175),
(414, 'os.makedirs(\"path/to/directory\", exist_ok=True)  # succeeds even if directory exists.\n', NULL, 175),
(415, 'import pathlib\npathlib.Path(\'/my/directory\').mkdir(parents=True, exist_ok=True) \n', NULL, 176),
(416, 'import os\nos.makedirs(path, exist_ok=True)\n', NULL, 176),
(417, 'import os\ntry: \n    os.makedirs(path)\nexcept OSError:\n    if not os.path.isdir(path):\n        raise\n', NULL, 176),
(418, 'import distutils.dir_util\ndistutils.dir_util.mkpath(path)\n', NULL, 176),
(419, 'import os\nimport errno\n\ndef make_sure_path_exists(path):\n    try:\n        os.makedirs(path)\n    except OSError as exception:\n        if exception.errno != errno.EEXIST:\n            raise\n', NULL, 177),
(420, 'from pathlib import Path\npath = Path(\'/my/directory/filename.txt\')\npath.parent.mkdir(parents=True, exist_ok=True) \n# path.parent ~ os.path.dirname(path)\n', NULL, 178),
(421, '>>> os.path.exists(\'/tmp/dirname\')\nTrue\n>>> os.path.exists(\'/tmp/dirname/filename.etc\')\nTrue\n>>> os.path.isdir(\'/tmp/dirname/filename.etc\')\nFalse\n>>> os.path.isdir(\'/tmp/fakedirname\')\nFalse\n', NULL, 179),
(422, '>>> dir = raw_input(\":: \")\n', NULL, 179),
(423, ':: /tmp/dirname/filename.etc\n', NULL, 179),
(424, 'import os\ntry:\n    os.makedirs(\'./path/to/somewhere\')\nexcept OSError:\n    pass\n', NULL, 180),
(425, 'if not os.path.exists(dir):\n    os.mkdir(dir)\n', NULL, 181),
(426, 'filename = \"/my/directory/filename.txt\"\ndir = os.path.dirname(filename)\n', NULL, 182),
(427, 'import os\nfilepath = \'/my/directory/filename.txt\'\ndirectory = os.path.dirname(filepath)\n', NULL, 182),
(428, 'if not os.path.exists(directory):\n    os.makedirs(directory)\nf = file(filename)\n', NULL, 182),
(429, 'with open(filepath) as my_file:\n    do_stuff(my_file)\n', NULL, 182),
(430, 'import errno\ntry:\n    with open(filepath) as my_file:\n        do_stuff(my_file)\nexcept IOError as error:\n    if error.errno == errno.ENOENT:\n        print \'ignoring error because directory or file is not there\'\n    else:\n        raise\n', NULL, 182),
(431, 'import os\nif not os.path.exists(directory):\n    os.makedirs(directory)\nwith open(filepath, \'w\') as my_file:\n    do_stuff(my_file)\n', NULL, 182),
(432, 'import os\nimport errno\nif not os.path.exists(directory):\n    try:\n        os.makedirs(directory)\n    except OSError as error:\n        if error.errno != errno.EEXIST:\n            raise\nwith open(filepath, \'w\') as my_file:\n    do_stuff(my_file)\n', NULL, 182),
(433, 'import os\n\ndirname = \'create/me\'\n\ntry:\n    os.makedirs(dirname)\nexcept OSError:\n    if os.path.exists(dirname):\n        # We are nearly safe\n        pass\n    else:\n        # There was an error on creation, so make sure we know about it\n        raise\n', NULL, 183),
(434, 'if not os.path.exists(d):\n    os.makedirs(d)\n', NULL, 184),
(435, 'import errno\ntry:\n    os.makedirs(d)\nexcept OSError as exception:\n    if exception.errno != errno.EEXIST:\n        raise\n', NULL, 184),
(436, 'import tempfile\n\nd = tempfile.mkdtemp()\n', NULL, 184),
(437, 'mkdtemp(suffix=\'\', prefix=\'tmp\', dir=None)\n    User-callable function to create and return a unique temporary\n    directory.  The return value is the pathname of the directory.\n\n    The directory is readable, writable, and searchable only by the\n    ', NULL, 184),
(438, 'from pathlib import Path\nimport tempfile\n', NULL, 184),
(439, 'directory = Path(tempfile.gettempdir()) / \'sodata\'\n', NULL, 184),
(440, 'directory.mkdir(exist_ok=True)\n', NULL, 184),
(441, 'todays_file = directory / str(datetime.datetime.utcnow().date())\nif todays_file.exists():\n    logger.info(\"todays_file exists: \" + str(todays_file))\n    df = pd.read_json(str(todays_file))\n', NULL, 184),
(442, 'from pathlib import Path\npath = Path(\"/my/directory/filename.txt\")\ntry:\n    if not path.parent.exists():\n        path.parent.mkdir(parents=True)\nexcept OSError:\n    # handle error; you can also catch specific errors like\n    # FileExistsError and so ', NULL, 185),
(443, 'from IPython.utils.path import ensure_dir_exists\nensure_dir_exists(dir)\n', NULL, 186),
(444, 'os.makedirs(path,exist_ok=True)\n', NULL, 187),
(445, 'import os\nimport errno\n\ndef make_sure_path_exists(path):\n    try:\n        os.makedirs(path)\n    except OSError as exception:\n        if exception.errno != errno.EEXIST:\n            raise\n', NULL, 187),
(446, 'try:\n    os.makedirs(path)\nexcept OSError as exception:\n    if exception.errno != errno.EEXIST:\n        raise\n    else:\n        print \"\\nBE CAREFUL! Directory %s already exists.\" % path\n', NULL, 188),
(447, 'if not os.path.exists(path):\n    os.makedirs(path)\nelse:\n    print \"\\nBE CAREFUL! Directory %s already exists.\" % path\n', NULL, 188),
(448, '#Devil\nimport os\ndirectory = \"./out_dir/subdir1/subdir2\"\nif not os.path.exists(directory):\n    os.makedirs(directory)\n', NULL, 189),
(449, '└── output/         ## dir\n   ├── corpus       ## file\n   ├── corpus2/     ## dir\n   └── subdir/      ## dir\n', NULL, 190),
(450, '# ----------------------------------------------------------------------------\n# [1] https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist\n\nimport pathlib\n\n\"\"\" Notes:\n        1.  Include a trailing slash at the ', NULL, 190),
(451, '# Create a directory and any missing ancestor directories. \n# If the directory already exists, do nothing.\n\nfrom distutils.dir_util import mkpath\nmkpath(\"test\")    \n', NULL, 191),
(452, 'from pathlib import Path\nPath(\"path/with/childs/.../\").mkdir(parents=True, exist_ok=True)\n', NULL, 192),
(453, 'from subprocess import call\ncall([\'mkdir\', \'-p\', \'path1/path2/path3\'])\n', NULL, 193),
(454, 'from subprocess import check_call\ntry:\n    check_call([\'mkdir\', \'-p\', \'path1/path2/path3\'])\nexcept:\n    handle...\n', NULL, 193),
(455, 'import os,sys,inspect\nimport pathlib\n\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nyour_folder = currentdir + \"/\" + \"your_folder\"\n\nif not os.path.exists(your_folder):\n   pathlib.Path(your_folder).mkdir(parent', NULL, 194),
(456, 'from pathlib import Path\n\npath_to_file = Path(\"zero/or/more/directories/file.ext\")\nparent_directory_of_file = path_to_file.parent\nparent_directory_of_file.mkdir(parents=True, exist_ok=True)\n', NULL, 195),
(457, 'import os\nimport errno\n\ndef make_sure_path_exists(path):\n    try:\n        os.makedirs(path)\n    except OSError as exception:\n        if exception.errno != errno.EEXIST or not os.path.isdir(path):\n            raise\n', NULL, 196),
(458, ' if not os.path.isdir(test_img_dir):\n     os.mkdir(test_img_dir)\n', NULL, 198),
(459, 'import os\n\ndef create_dir(directory):\n    if not os.path.exists(directory):\n        print(\'Creating Directory \'+directory)\n        os.makedirs(directory)\n\ncreate_dir(\'Project directory\')\n', NULL, 199),
(460, 'os.path.isdir(\'/tmp/dirname\')\n', NULL, 200),
(461, 'import os\nif \'dirName\' in os.listdir(\'parentFolderPath\')\n    print(\'Directory Exists\')\n', NULL, 201),
(462, 'from fastcore.utils import Path\nPath(\'/dir/to/file.txt\').mk_write(\'Hello World\')\n', NULL, 202),
(463, 'import os\ndirs=\'dir1/dir2/dir3\'\nos.system(\"mkdir -p {0}\".format(dirs))\n', NULL, 203),
(464, 'import sys\nsys.path.append(\"..\") # Adds higher directory to python modules path.\n', NULL, 205),
(465, 'package1/\n    subpackage1/\n        module1.py\npackage2/\n    subpackage2/\n        module2.py\n', NULL, 207),
(466, 'import sys\nsys.path.append(\".\")\n', NULL, 207),
(467, 'import os\nprint (os.getcwd())\n', NULL, 207),
(468, '#  package.test_A/test.py\nfrom ..A import foo\n', NULL, 208),
(469, '#  root.py\nfrom package.test_A import test\n', NULL, 208),
(470, 'package.A.foo has been imported\nModule\'s name is:  package.test_A.test\n', NULL, 208),
(471, 'python -m package.test_A.test\n', NULL, 208),
(472, 'import sys\nsys.path.append(\"..\")\n', NULL, 209),
(473, 'PYTHONPATH=/path/to/package python -m test_A.test\n', NULL, 210),
(474, 'from os import path\n…\ndef main():\n…\nif __name__ == \'__main__\':\n    import sys\n    sys.path.append(path.join(path.dirname(__file__), \'..\'))\n    from A import foo\n\n    exit(main())\n', NULL, 210),
(475, 'import alias\n', NULL, 212),
(476, 'from A import foo\n', NULL, 213),
(477, 'import sys\nimport os\nimport pathlib\ntarget_path = pathlib.Path(os.path.abspath(__file__)).parents[3]\nsys.path.append(target_path)\nfrom utils import MultiFileAllowed\n', NULL, 214),
(478, 'import sys\nimport os\nsys.path.append(os.getcwd())\nfrom utils import MultiFileAllowed\n', NULL, 214),
(479, 'python -m test_A.test\n', NULL, 215),
(480, 'import test_A.test\n', NULL, 215),
(481, 'from test_A import test\n', NULL, 215),
(482, 'python -m package.test_A.test\n', NULL, 215),
(483, 'from package.test_A import test\n', NULL, 215),
(484, 'project_root\n  |\n  |----- my_module\n  |          \\\n  |           \\_____ my_class.py\n  |\n  \\ tests\n      \\___ test_my_func.py\n\n', NULL, 216),
(485, 'package/\n   __init__.py\n   A/\n      __init__.py\n      foo.py\n   test_A/\n      __init__.py\n      test.py\n\n', NULL, 217),
(486, '\nfrom .foo import foo\n', NULL, 217),
(487, '\nimport sys, os\nsys.path.append(os.path.abspath(\'../A\'))\n# then import foo\nimport foo\n\n', NULL, 217),
(488, 'from A import foo\n', NULL, 218),
(489, 'from ... import nib\n', NULL, 219),
(490, 'import os\nimport sys\nimport inspect\n\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nsys.path.insert(0, parentdir) \n\nimport mymodule\n', NULL, 220),
(491, '.\n└── ptdraft\n    ├── __init__.py\n    ├── nib.py\n    └── simulations\n        ├── __init__.py\n        └── life\n            ├── __init__.py\n            └── life.py\n', NULL, 221),
(492, '    from setuptools import setup, find_packages\n\n    setup(name=\'myproject\', version=\'1.0\', packages=find_packages())\n', NULL, 221),
(493, 'PS C:\\tmp\\test_imports> python -m venv venv\nPS C:\\tmp\\test_imports> .\\venv\\Scripts\\activate\n(venv) PS C:\\tmp\\test_imports>\n', NULL, 221),
(494, '(venv) PS C:\\tmp\\test_imports> pip install -e .\nObtaining file:///C:/tmp/test_imports\nInstalling collected packages: myproject\n  Running setup.py develop for myproject\nSuccessfully installed myproject\n(venv) PS C:\\tmp\\test_imports> pip freeze\nmyproje', NULL, 221),
(495, 'def function_from_nib():\n    print(\'I am the return value from function_from_nib!\')\n', NULL, 221),
(496, 'from ptdraft.nib import function_from_nib\n\nif __name__ == \'__main__\':\n    function_from_nib()\n', NULL, 221),
(497, '(venv) PS C:\\tmp\\test_imports> python .\\ptdraft\\simulations\\life\\life.py\nI am the return value from function_from_nib!\n', NULL, 221),
(498, 'import sys\nsys.path.insert(0,\'..\')\n', NULL, 223),
(499, 'sys.path.insert(0,\'../..\')\n', NULL, 223),
(500, 'import sys \nsys.path.append(\'..\')\n', NULL, 224),
(501, 'import sys\n# Add the ptdraft folder path to the sys.path list\nsys.path.append(\'/path/to/ptdraft/\')\n\n# Now you can import your module\nfrom ptdraft import nib\n# Or just\nimport ptdraft\n', NULL, 225),
(502, 'from inspect import getsourcefile\nimport os.path as path, sys\ncurrent_dir = path.dirname(path.abspath(getsourcefile(lambda:0)))\nsys.path.insert(0, current_dir[:current_dir.rfind(path.sep)])\nimport my_module  # Replace \"my_module\" here with the module', NULL, 226),
(503, 'from inspect import getsourcefile\nimport os.path\nimport sys\n\ncurrent_path = os.path.abspath(getsourcefile(lambda:0))\ncurrent_dir = os.path.dirname(current_path)\nparent_dir = current_dir[:current_dir.rfind(os.path.sep)]\n\nsys.path.insert(0, parent_dir)', NULL, 226),
(504, 'from inspect import getsourcefile  \nfrom os.path import abspath  \n', NULL, 226),
(505, 'abspath(getsourcefile(lambda:0))\n', NULL, 226),
(506, 'import os.path, sys\nsys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), os.pardir))\n', NULL, 227),
(507, 'import sys\nfrom pathlib import Path\nsys.path.append(str(Path(\'.\').absolute().parent))\n', NULL, 228),
(508, '%cd ..\nimport nib\n', NULL, 229),
(509, '.\n└── my_application\n    └── alembic\n        └── env.py\n    └── app\n        ├── __init__.py\n        └── db\n', NULL, 230),
(510, 'import os\nimport sys\ncurrentdir = os.path.dirname(os.path.realpath(__file__))\nparentdir = os.path.dirname(currentdir)\nsys.path.append(parentdir)\n', NULL, 230),
(511, 'from ...module_name import *\n', NULL, 231),
(512, 'from ..module_name import *\n', NULL, 231),
(513, 'from ...module_name.another_module import *\n', NULL, 231),
(514, 'sys.path.append(os.path.dirname(os.getcwd()))\n', NULL, 233),
(515, 'sys.path.insert(1, os.path.dirname(os.getcwd()))\n', NULL, 233),
(516, 'cd ptdraft\npython -m simulations.life.life\n', NULL, 234),
(517, 'import os, sys\nsys.path.insert(0, os.getcwd()) \n', NULL, 235),
(518, 'python child_module1/child_script.py\n', NULL, 235),
(519, 'import os,sys\nparentdir = os.path.dirname(__file__)\nsys.path.insert(0,parentdir)\n', NULL, 236),
(520, 'import nib\n', NULL, 238),
(521, 'sys.path.append(git.Repo(\'.\', search_parent_directories=True).working_tree_dir)\n', NULL, 239),
(522, 'import os\nimport sys\nimport git\ndef get_main_git_root(path):\n    main_repo_root_dir = git.Repo(path, search_parent_directories=True).working_tree_dir\n    return main_repo_root_dir\nmain_repo_root_dir = get_main_git_root(\'.\')\nsys.path.append(main_repo_', NULL, 239),
(523, 'import ptdraft.nib\n', NULL, 239),
(524, 'import nib\n', NULL, 239),
(525, '/myproject\n  project_using_ptdraft/\n    main.py\n  ptdraft/\n    __init__.py\n    nib.py\n    simulations/\n      __init__.py\n      life/\n        __init__.py\n        life.py\n', NULL, 240),
(526, 'import ptdraft.nib\n', NULL, 240),
(527, 'cd /myproject\npython -m ptdraft.simulations.life.life\n', NULL, 240),
(528, 'import sys\nsys.path.append(\"/myproject\")  # folder that contains ptdraft\nimport ptdraft\nimport ptdraft.simulations\n', NULL, 240),
(529, '.\n└── service\n    └── misc\n        └── categories.csv\n    └── test\n        └── app_test.py\n    app.py\n    pipeline.py\n', NULL, 242),
(530, 'import os,sys,inspect\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nsys.path.insert(0,parentdir)\n\nos.chdir(\'../\')\nfrom app import app\n', NULL, 242),
(531, 'import simulations.life.life as life\ndef func1():\n   pass\ndata1 = {}\nlife.share(func1, data1)\n', NULL, 243),
(532, 'func1 = data1 = None\n\ndef share(*args):\n   global func1, data1\n   func1, data1 = args\n', NULL, 243),
(533, '# Just add parent path\nadd_parent_path(1)\n\n# Append to syspath and delete when the exist of with statement.\nwith add_parent_path(1):\n   # Import modules in the parent path\n   pass\n', NULL, 244),
(534, 'from ptdraft import nib\n', NULL, 245),
(535, 'import os\nimport shutil\n\nshutil.copy(\'../nib.py\', \'.\')\nimport nib\nos.remove(\'nib.py\')\n\n# now you can use it just fine:\nnib.foo()\n', NULL, 246),
(536, 'import os\nos.chdir(\'..\')\n', NULL, 247),
(537, 'tools/\n    core/\n        object_editor/\n            # files that need to use ntlib.py\n            editor.py # see example at bottom\n            __init__.py\n        state_editor/\n            # files that need to use ntlib.py\n            __init__.py\n  ', NULL, 248),
(538, 'from core.object_editor import editor\n', NULL, 248),
(539, 'from .. import ntlib\n', NULL, 248),
(540, 'from core import ntlib\n', NULL, 248),
(541, 'import sys\nimport os\nsys.path.append(os.path.join(os.path.dirname(__file__), \'..\', \'..\'))\n', NULL, 249),
(542, 'C:\\\n  |\n  +-- stock_alerter\n             |\n             +-- __init__.py\n             +-- stock.py\n             |\n             \\-- tests\n                   |\n                   +-- __init__.py\n                   \\-- test_stock.py\n', NULL, 250),
(543, 'stuff/\n    mylib.py\n    foo.py // equivalent of main.py in above\n    foo/\n        script.py\n        mylib.py  ->  ../mylib.py\n    foo2/\n        script2.py\n        mylib.py  ->  ../mylib.py\n\n', NULL, 253),
(544, 'tests/\n    common/\n        commonlib.py\n    test1/\n        executable1.py\n        executable2.py\n        commonlib.py -> ../common/commonlib.py\n    test2/\n        executable1.py\n        executable2.py\n        commonlib.py -> ../common/commonlib.py\n\n\n', NULL, 253),
(545, '# demo is a package in the current directory for this example\n>>> info = imp.find_module(\'demo\')\n>>> info\n(None, \'demo\', (\'\', \'\', 5))\n>>> demo = imp.load_module(\'demo\', *info)\n>>> demo.__path__\n[\'demo\']\n', NULL, 254),
(546, 'import src.fileB\n', NULL, 255),
(547, 'export PYTHONPATH=\"${PYTHONPATH}:/my/other/path\"\n', NULL, 256),
(548, 'python -m site --user-site\n', NULL, 258),
(549, 'python -c \'import site; site._script()\' --user-site\n', NULL, 258),
(550, '# find directory\nSITEDIR=$(python -m site --user-site)\n\n# create if it doesn\'t exist\nmkdir -p \"$SITEDIR\"\n\n# create new .pth file with our path\necho \"$HOME/foo/bar\" > \"$SITEDIR/somelib.pth\"\n', NULL, 258),
(551, 'import sys\nsys.path.append(\'/path/to/dir\')\n', NULL, 261),
(552, 'python -c \'import sys; print(sys.prefix)\'\n', NULL, 262),
(553, 'python -c \'import sys; print(sys.path)\'\n', NULL, 262),
(554, '~/.bash_profile \n', NULL, 263),
(555, 'export PYTHONPATH=\"${PYTHONPATH}:/Users/<myuser>/project_root_folder_path\"\n', NULL, 263),
(556, 'source ~/.bash_profile\n', NULL, 263),
(557, 'ln -s /your/path /usr/lib/pymodules/python2.7/\n', NULL, 264),
(558, 'export PYTHONPATH=\"$PYTHONPATH:/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\"\n', NULL, 265),
(559, 'export PYTHONPATH=\"/my/other/path1\"\nexport PYTHONPATH=\"${PYTHONPATH}:/my/other/path2\"\n', NULL, 266),
(560, 'nano ~/.zshrc\n', NULL, 268),
(561, 'export PATH=\"${PATH}:/Users/caio.hc.oliveira/Library/Python/3.7/bin\"\nexport PYTHONPATH=\"${PYTHONPATH}:/Users/caio.hc.oliveira/Library/Python/3.7/bin\"\n', NULL, 268),
(562, 'from pathlib import Path\nto_add=Path(path_of_directory_to_add)\nfrom sys import path\n\nif str(to_add) not in path:\n    minLen=999999\n    for index,directory in enumerate(path):\n        if \'site-packages\' in directory and len(directory)<=minLen:\n       ', NULL, 269),
(563, 'vim ~/.bashrc\n', NULL, 270),
(564, 'export PYTHONPATH=\"${PYTHONPATH}:/User/johndoe/pythonModule\"\n', NULL, 270),
(565, 'source ~/.bashrc \n', NULL, 270),
(566, 'import sys\nimport os\n\nprint(str(sys.path))\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\nprint(f\"current working dir: {dir_path}\")\n\nroot_dir = dir_path.replace(\"/util\", \'\', 1)\nprint(f\"root dir: {root_dir}\")\n\nsys.path.insert(0, root_dir)\n\npr', NULL, 273),
(567, 'import os\n\n# Add paths here.  Then Run this block of code once and restart kernel. Paths should now be set.\npaths_of_directories_to_add = [r\'C:\\GIT\\project1\', r\'C:\\GIT\\project2\', r\'C:\\GIT\\project3\']\n\n# Find your site-packages directory\npathSitePckgs ', NULL, 274),
(568, 'export PYTHONPATH=\"/usr/local/bin/python3.10:/usr/local/lib/python3.10/lib-dynload:/usr/local/lib/python3.10/site-packages\"\n', NULL, 276),
(569, 'import sys\nif not \'NEW_PATH\' in sys.path:\n  sys.path += [\'NEW_PATH\']\n', NULL, 277),
(570, '$ python -m helloworld.another_hello.import_hello\n', NULL, 278),
(571, 'import helloworld.another_hello.import_hello\nhelloworld.another_hello.import_hello.main()\n', NULL, 278),
(572, 'from sys import path as pylib\nimport os\npylib += os.path.abspath(\'..\')\nfrom helloworld import say_hello\n', NULL, 279),
(573, 'if __name__ == \"__main__\": # Local Run\n    import test\nelse: # Module Run, When going production - delete if/else\n    from . import test\n', NULL, 281),
(574, 'import test\n', NULL, 282),
(575, 'if __name__ == \"__main__\":\n    print(\'Test works\')\n', NULL, 282),
(576, 'import test\ntest.main()\n', NULL, 282),
(577, 'def main():\n    print(\'Test works\')\n\nif __name__ == \"__main__\":\n    main()\n', NULL, 282),
(578, '$ mkdir foo\n$ touch foo/__init__.py\n$ mv /some/place/{test1,test2}.py foo/\n', NULL, 283),
(579, '$ export PYTHONPATH=.\n$ python -m foo.test1\n', NULL, 283),
(580, '$ python foo/test1.py\n', NULL, 283),
(581, 'import sys\nimport pprint\npprint.pprint(sys.path)\n', NULL, 283),
(582, 'from . import app, db\n', NULL, 285),
(583, 'import sys\nsys.path.append(\".../SnapQuick/profile\") (you need whole path)\nfrom profile import login\n', NULL, 286);

-- --------------------------------------------------------

--
-- Table structure for table `questions`
--

CREATE TABLE `questions` (
  `id` int(11) NOT NULL,
  `title` varchar(500) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `status` int(1) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`id`, `title`, `url`, `status`) VALUES
(1, 'python 3.x - Import parent directory for brief tests - Stack Overflow', 'https://stackoverflow.com/questions/11452299/import-parent-directory-for-brief-tests?noredirect=1', 1),
(2, 'django - Relative Imports - Stack Overflow', 'https://stackoverflow.com/questions/14767426/relative-imports?noredirect=1', 1),
(3, 'python - Relative imports for the billionth time - Stack Overflow', 'https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time?noredirect=1', 1),
(4, 'How to debug Python import failure - Stack Overflow', 'https://stackoverflow.com/questions/6134146/how-to-debug-python-import-failure?noredirect=1', 1),
(5, 'python relative import example code does not work - Stack Overflow', 'https://stackoverflow.com/questions/9123062/python-relative-import-example-code-does-not-work?noredirect=1', 1),
(6, 'python - beyond top level package error in relative import - Stack Overflow', 'https://stackoverflow.com/questions/30669474/beyond-top-level-package-error-in-relative-import?noredirect=1', 1),
(7, 'Python gives relative import error for package? - Stack Overflow', 'https://stackoverflow.com/questions/50881667/python-gives-relative-import-error-for-package?noredirect=1', 1),
(8, 'google app engine - python relative inclusion - Stack Overflow', 'https://stackoverflow.com/questions/4780505/python-relative-inclusion?noredirect=1', 1),
(9, 'Python relative imports - Stack Overflow', 'https://stackoverflow.com/questions/21714289/python-relative-imports?noredirect=1', 1),
(10, 'python - ValueError : attempted relative import beyond top-level package - Stack Overflow', 'https://stackoverflow.com/questions/43181018/valueerror-attempted-relative-import-beyond-top-level-package?noredirect=1', 1),
(11, 'Relative imports in Python 3 - Stack Overflow', 'https://stackoverflow.com/questions/16981921/relative-imports-in-python-3', 1),
(12, 'syntax - What does __all__ mean in Python? - Stack Overflow', 'https://stackoverflow.com/questions/44834/what-does-all-mean-in-python', 1),
(13, 'python - Relative imports for the billionth time - Stack Overflow', 'https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time', 1),
(14, 'python - How can I add new keys to a dictionary? - Stack Overflow', 'https://stackoverflow.com/questions/1024847/how-can-i-add-new-keys-to-a-dictionary', 1),
(15, 'What is the difference between Python\'s list methods append and extend? - Stack Overflow', 'https://stackoverflow.com/questions/252703/what-is-the-difference-between-pythons-list-methods-append-and-extend', 1),
(16, 'python - How do I clone a list so that it doesn\'t change unexpectedly after assignment? - Stack Overflow', 'https://stackoverflow.com/questions/2612802/how-do-i-clone-a-list-so-that-it-doesnt-change-unexpectedly-after-assignment', 1),
(17, 'python - How do I install pip on Windows? - Stack Overflow', 'https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows', 1),
(18, 'python - How can I safely create a nested directory? - Stack Overflow', 'https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory', 1),
(19, 'python - beyond top level package error in relative import - Stack Overflow', 'https://stackoverflow.com/questions/30669474/beyond-top-level-package-error-in-relative-import', 1),
(20, 'python - Importing modules from parent folder - Stack Overflow', 'https://stackoverflow.com/questions/714063/importing-modules-from-parent-folder?noredirect=1', 1),
(21, 'How to accomplish relative import in python - Stack Overflow', 'https://stackoverflow.com/questions/4655526/how-to-accomplish-relative-import-in-python?noredirect=1', 1),
(22, 'Dynamic imports + relative imports in Python 3 - Stack Overflow', 'https://stackoverflow.com/questions/5078590/dynamic-imports-relative-imports-in-python-3?noredirect=1', 1),
(23, 'python - ModuleNotFoundError from Subfolders - Stack Overflow', 'https://stackoverflow.com/questions/67808904/modulenotfounderror-from-subfolders?noredirect=1', 1),
(24, 'python - Permanently add a directory to PYTHONPATH? - Stack Overflow', 'https://stackoverflow.com/questions/3402168/permanently-add-a-directory-to-pythonpath', 1),
(25, 'python - Import a module from the parent directory within packages - Stack Overflow', 'https://stackoverflow.com/questions/50902304/import-a-module-from-the-parent-directory-within-packages', 1),
(26, 'Does importing a Python file also import the imported files into shell? - Stack Overflow', 'https://stackoverflow.com/questions/52250013/does-importing-a-python-file-also-import-the-imported-files-into-shell', 1),
(27, 'ImportError with from . import x on simple python files - Stack Overflow', 'https://stackoverflow.com/questions/54839933/importerror-with-from-import-x-on-simple-python-files', 1),
(28, 'python 3.x - How to import Flask app on test file to make unittest - Stack Overflow', 'https://stackoverflow.com/questions/56960633/how-to-import-flask-app-on-test-file-to-make-unittest', 1),
(29, 'How can I import a file present in different folder in python? - Stack Overflow', 'https://stackoverflow.com/questions/57727715/how-can-i-import-a-file-present-in-different-folder-in-python', 1);

-- --------------------------------------------------------

--
-- Table structure for table `related_answer`
--

CREATE TABLE `related_answer` (
  `id` int(11) NOT NULL,
  `status` int(1) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `related_answer`
--

INSERT INTO `related_answer` (`id`, `status`, `link`) VALUES
(20, 1, 'https://stackoverflow.com/questions/1918539/can-anyone-explain-pythons-relative-imports?noredirect=1'),
(50, 1, 'https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do'),
(59, 1, 'https://stackoverflow.com/questions/23619595/pythons-os-chdir-function-isnt-working?noredirect=1'),
(77, 1, 'https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time?noredirect=1'),
(78, 1, 'https://stackoverflow.com/questions/50881667/python-gives-relative-import-error-for-package?noredirect=1'),
(79, 1, 'https://stackoverflow.com/questions/30669474/beyond-top-level-package-error-in-relative-import?noredirect=1'),
(80, 1, 'https://stackoverflow.com/questions/11452299/import-parent-directory-for-brief-tests?noredirect=1'),
(81, 1, 'https://stackoverflow.com/questions/14767426/relative-imports?noredirect=1'),
(82, 1, 'https://stackoverflow.com/questions/9123062/python-relative-import-example-code-does-not-work?noredirect=1'),
(83, 1, 'https://stackoverflow.com/questions/6134146/how-to-debug-python-import-failure?noredirect=1'),
(84, 1, 'https://stackoverflow.com/questions/4780505/python-relative-inclusion?noredirect=1'),
(85, 1, 'https://stackoverflow.com/questions/43181018/valueerror-attempted-relative-import-beyond-top-level-package?noredirect=1'),
(86, 1, 'https://stackoverflow.com/questions/21714289/python-relative-imports?noredirect=1'),
(87, 1, 'https://stackoverflow.com/questions/44834/what-does-all-mean-in-python'),
(88, 1, 'https://stackoverflow.com/questions/252703/what-is-the-difference-between-pythons-list-methods-append-and-extend'),
(89, 1, 'https://stackoverflow.com/questions/273192/how-can-i-safely-create-a-nested-directory'),
(90, 1, 'https://stackoverflow.com/questions/1024847/how-can-i-add-new-keys-to-a-dictionary'),
(91, 1, 'https://stackoverflow.com/questions/2612802/how-do-i-clone-a-list-so-that-it-doesnt-change-unexpectedly-after-assignment'),
(92, 1, 'https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows'),
(93, 1, 'https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time'),
(94, 1, 'https://stackoverflow.com/questions/16981921/relative-imports-in-python-3'),
(95, 1, 'https://stackoverflow.com/questions/30669474/beyond-top-level-package-error-in-relative-import'),
(96, 1, 'https://stackoverflow.com/questions/714063/importing-modules-from-parent-folder?noredirect=1'),
(97, 1, 'https://stackoverflow.com/questions/4655526/how-to-accomplish-relative-import-in-python?noredirect=1'),
(98, 1, 'https://stackoverflow.com/questions/5078590/dynamic-imports-relative-imports-in-python-3?noredirect=1'),
(99, 1, 'https://stackoverflow.com/questions/67808904/modulenotfounderror-from-subfolders?noredirect=1'),
(100, 1, 'https://stackoverflow.com/questions/3402168/permanently-add-a-directory-to-pythonpath'),
(101, 1, 'https://stackoverflow.com/questions/50902304/import-a-module-from-the-parent-directory-within-packages'),
(102, 1, 'https://stackoverflow.com/questions/52250013/does-importing-a-python-file-also-import-the-imported-files-into-shell'),
(103, 1, 'https://stackoverflow.com/questions/54839933/importerror-with-from-import-x-on-simple-python-files'),
(104, 1, 'https://stackoverflow.com/questions/56960633/how-to-import-flask-app-on-test-file-to-make-unittest'),
(105, 1, 'https://stackoverflow.com/questions/57727715/how-can-i-import-a-file-present-in-different-folder-in-python'),
(106, 0, 'https://stackoverflow.com/questions/64172195/import-module-to-test-directory'),
(107, 0, 'https://stackoverflow.com/questions/32395926/python-relative-import-with-more-than-two-dots?noredirect=1'),
(108, 0, 'https://stackoverflow.com/questions/36322192/proper-way-to-set-up-pythonpath-for-django-project?noredirect=1'),
(109, 0, 'https://stackoverflow.com/questions/2862979/easiest-way-to-rename-a-model-using-django-south'),
(110, 0, 'https://stackoverflow.com/questions/12578908/separation-of-business-logic-and-data-access-in-django'),
(111, 0, 'https://stackoverflow.com/questions/16297328/import-relative-apps-in-django'),
(112, 0, 'https://stackoverflow.com/questions/25091130/django-migration-strategy-for-renaming-a-model-and-relationship-fields'),
(113, 0, 'https://stackoverflow.com/questions/26379026/resolving-circular-imports-in-celery-and-django'),
(114, 0, 'https://stackoverflow.com/questions/31800038/confusing-broken-imports-with-python3-and-django'),
(115, 0, 'https://stackoverflow.com/questions/32899119/django-relative-import-from-external-app'),
(116, 0, 'https://stackoverflow.com/questions/53248640/django-app-in-subdirectory-relative-import'),
(117, 0, 'https://stackoverflow.com/questions/68161406/why-does-from-import-views-work-and-import-views-does-not'),
(118, 0, 'https://stackoverflow.com/questions/68960171/python-error-importerror-attempted-relative-import-with-no-known-parent-packa?noredirect=1'),
(119, 0, 'https://stackoverflow.com/questions/51205382/python3-import-issue-on-pycharm?noredirect=1'),
(120, 0, 'https://stackoverflow.com/questions/46327361/how-to-import-one-submodule-from-different-submodule?noredirect=1'),
(121, 0, 'https://stackoverflow.com/questions/51589404/pycharm-shows-error-in-relative-import-even-though-it-is-not-an-error?noredirect=1'),
(122, 0, 'https://stackoverflow.com/questions/54847365/importerror-cannot-import-name-settings-from-main?noredirect=1'),
(123, 0, 'https://stackoverflow.com/questions/70145159/how-i-can-fix-importerror-attempted-relative-import-beyond-top-level-package?noredirect=1'),
(124, 0, 'https://stackoverflow.com/questions/51691299/python-understanding-modulenotfounderror-no-module-named-main-xxx-rela?noredirect=1'),
(125, 0, 'https://stackoverflow.com/questions/68603598/not-able-to-import-a-python-class-from-another-directory-in-python?noredirect=1'),
(126, 0, 'https://stackoverflow.com/questions/72852/how-to-do-relative-imports-in-python'),
(127, 0, 'https://stackoverflow.com/questions/415511/how-do-i-get-the-current-time'),
(128, 0, 'https://stackoverflow.com/questions/448271/what-is-init-py-for'),
(129, 0, 'https://stackoverflow.com/questions/522563/accessing-the-index-in-for-loops'),
(130, 0, 'https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops'),
(131, 0, 'https://stackoverflow.com/questions/17666249/how-do-i-import-an-sql-file-using-the-command-line-in-mysql'),
(132, 0, 'https://stackoverflow.com/questions/62021938/modulenotfounderror-in-a-local-repository?noredirect=1'),
(133, 0, 'https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression'),
(134, 0, 'https://stackoverflow.com/questions/67631/how-do-i-import-a-module-given-the-full-path'),
(135, 0, 'https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions'),
(136, 0, 'https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python'),
(137, 0, 'https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator'),
(138, 0, 'https://stackoverflow.com/questions/950087/how-do-i-include-a-javascript-file-in-another-javascript-file'),
(139, 0, 'https://stackoverflow.com/questions/1720421/how-do-i-concatenate-two-lists-in-python'),
(140, 0, 'https://stackoverflow.com/questions/3616952/how-to-properly-use-relative-or-absolute-imports-in-python-modules?noredirect=1'),
(141, 0, 'https://stackoverflow.com/questions/72852/how-to-do-relative-imports-in-python?noredirect=1'),
(142, 0, 'https://stackoverflow.com/questions/4175534/relative-imports-in-python?noredirect=1'),
(143, 0, 'https://stackoverflow.com/questions/6126628/python-relative-import-weirdness?noredirect=1'),
(144, 0, 'https://stackoverflow.com/questions/57913816/relative-imports-directory-structure-trillionth-time?noredirect=1'),
(145, 0, 'https://stackoverflow.com/questions/16114140/python-relative-import-does-not-work-from-command-line-gives-valueerror?noredirect=1'),
(146, 0, 'https://stackoverflow.com/questions/72540769/relative-imports-in-python-for-i-dont-know-how-many-times?noredirect=1'),
(147, 0, 'https://stackoverflow.com/questions/279237/import-a-module-from-a-relative-path'),
(148, 0, 'https://stackoverflow.com/questions/2349991/how-can-i-import-other-python-files'),
(149, 0, 'https://stackoverflow.com/questions/3277367/how-does-pythons-super-work-with-multiple-inheritance'),
(150, 0, 'https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method'),
(151, 0, 'https://stackoverflow.com/questions/17330160/how-does-the-property-decorator-work-in-python'),
(152, 0, 'https://stackoverflow.com/questions/48716943/what-is-python-implicit-relative-import'),
(153, 0, 'https://stackoverflow.com/questions/53868369/python-3-module-import-error-from-another-folder?noredirect=1'),
(154, 0, 'https://stackoverflow.com/questions/65228640/can-someone-please-explain-why-python-relative-imports-arent-intuitive?noredirect=1'),
(155, 0, 'https://stackoverflow.com/questions/2349991/how-can-i-import-other-python-files?noredirect=1'),
(156, 0, 'https://stackoverflow.com/questions/11536764/how-to-fix-attempted-relative-import-in-non-package-even-with-init-py?noredirect=1'),
(157, 0, 'https://stackoverflow.com/questions/6323860/sibling-package-imports?noredirect=1'),
(158, 0, 'https://stackoverflow.com/questions/2817264/how-to-get-the-parent-dir-location?noredirect=1'),
(159, 0, 'https://stackoverflow.com/questions/1899436/pylint-unable-to-import-error-how-to-set-pythonpath'),
(160, 0, 'https://stackoverflow.com/questions/11536764/how-to-fix-attempted-relative-import-in-non-package-even-with-init-py'),
(161, 0, 'https://stackoverflow.com/questions/47961723/pep-328-relative-import-beyond-top-level-package'),
(162, 0, 'https://stackoverflow.com/questions/56936461/what-attempted-relative-import-beyond-top-level-package-error-means-in-python'),
(163, 0, 'https://stackoverflow.com/questions/59307991/attempted-relative-import-beyond-top-level-package-python'),
(164, 0, 'https://stackoverflow.com/questions/70441149/importerror-attempted-relative-import-beyond-top-level-package-i-am-genuinely'),
(165, 0, 'https://stackoverflow.com/questions/63881853/pylint-and-python-tool-run-clash-about-relative-imports-of-a-package-no-modu?noredirect=1'),
(166, 0, 'https://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python'),
(167, 0, 'https://stackoverflow.com/questions/36795819/when-should-i-use-curly-braces-for-es6-import'),
(168, 0, 'https://stackoverflow.com/questions/48536095/python-relative-import-not-working'),
(169, 0, 'https://stackoverflow.com/questions/123198/how-to-copy-files'),
(170, 0, 'https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python'),
(171, 0, 'https://stackoverflow.com/questions/35166821/valueerror-attempted-relative-import-beyond-top-level-package'),
(172, 0, 'https://stackoverflow.com/questions/51046660/how-to-resolve-valueerror-attempted-relative-import-beyond-top-level-package'),
(173, 0, 'https://stackoverflow.com/questions/58813098/attempted-relative-import-beyond-top-level-package-error'),
(174, 0, 'https://stackoverflow.com/questions/59489786/yet-another-importerror-attempted-relative-import-with-no-known-parent-package?noredirect=1'),
(175, 0, 'https://stackoverflow.com/questions/30283858/intellij-idea-wont-recognize-import-of-local-class-in-python-3?noredirect=1'),
(176, 0, 'https://stackoverflow.com/questions/37703413/python-module-working-on-2-7-but-not-on-3-5?noredirect=1'),
(177, 0, 'https://stackoverflow.com/questions/27005466/absolute-or-relative-imports-in-python-3-4-with-sibling-directories?noredirect=1'),
(178, 0, 'https://stackoverflow.com/questions/65311776/trying-to-import-constants-into-a-file-importerror-attempted-relative-import-w?noredirect=1'),
(179, 0, 'https://stackoverflow.com/questions/26067972/python-3-sideways-relative-import?noredirect=1'),
(180, 0, 'https://stackoverflow.com/questions/63385313/valueerror-attempted-relative-import-beyond-top-level-package-when-import-fil?noredirect=1'),
(181, 0, 'https://stackoverflow.com/questions/50760873/why-not-import-python?noredirect=1'),
(182, 0, 'https://stackoverflow.com/questions/30352663/python-systemerror-parent-module-not-loaded-cannot-perform-relative-import?noredirect=1'),
(183, 0, 'https://stackoverflow.com/questions/30081275/why-is-1000000000000000-in-range1000000000000001-so-fast-in-python-3'),
(184, 0, 'https://stackoverflow.com/questions/2187583/whats-the-python-all-module-level-variable-for?noredirect=1'),
(185, 0, 'https://stackoverflow.com/questions/49871866/init-py-imports-expose-also-modules-i-use-not-only-my-own-classes?noredirect=1'),
(186, 0, 'https://stackoverflow.com/questions/31560962/what-does-mean-all?noredirect=1'),
(187, 0, 'https://stackoverflow.com/questions/48213476/python-one-variable-but-different-values?noredirect=1'),
(188, 0, 'https://stackoverflow.com/questions/17539122/can-anyone-help-elaborate-on-this-paragraph-in-python-tutorial?noredirect=1'),
(189, 0, 'https://stackoverflow.com/questions/58260525/is-all-a-shorthand-for-import?noredirect=1'),
(190, 0, 'https://stackoverflow.com/questions/69120277/how-to-allow-python-file-to-export-specific-functions-that-can-be-imported-later?noredirect=1'),
(191, 0, 'https://stackoverflow.com/questions/49499848/why-cant-i-call-a-function-inside-a-python-module-without-a-fully-qualified-nam?noredirect=1'),
(192, 0, 'https://stackoverflow.com/questions/1301346/what-is-the-meaning-of-single-and-double-underscore-before-an-object-name?noredirect=1'),
(193, 0, 'https://stackoverflow.com/questions/139180/how-to-list-all-functions-in-a-module?noredirect=1'),
(194, 0, 'https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters'),
(195, 0, 'https://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname'),
(196, 0, 'https://stackoverflow.com/questions/419163/what-does-if-name-main-do'),
(197, 0, 'https://stackoverflow.com/questions/1335851/what-does-use-strict-do-in-javascript-and-what-is-the-reasoning-behind-it'),
(198, 0, 'https://stackoverflow.com/questions/1436703/what-is-the-difference-between-str-and-repr'),
(199, 0, 'https://stackoverflow.com/questions/6416131/add-a-new-item-to-a-dictionary-in-python?noredirect=1'),
(200, 0, 'https://stackoverflow.com/questions/3776275/how-to-add-key-value-pair-to-dictionary?noredirect=1'),
(201, 0, 'https://stackoverflow.com/questions/34700207/adding-variables-to-dictionary?noredirect=1'),
(202, 0, 'https://stackoverflow.com/questions/49906205/updating-dictionary-in-a-loop-python?noredirect=1'),
(203, 0, 'https://stackoverflow.com/questions/44562599/how-to-combine-two-json-files?noredirect=1'),
(204, 0, 'https://stackoverflow.com/questions/61437951/is-there-a-array-like-class-that-implement-quick-search-adding-words-in-alphabet?noredirect=1'),
(205, 0, 'https://stackoverflow.com/questions/67280005/how-to-append-a-dictionary?noredirect=1'),
(206, 0, 'https://stackoverflow.com/questions/50145531/python-dictionary-syntax-to-initiate-a-dictionary?noredirect=1'),
(207, 0, 'https://stackoverflow.com/questions/65955533/appending-to-the-top-of-a-nested-json-dict?noredirect=1'),
(208, 0, 'https://stackoverflow.com/questions/43243939/for-loops-and-dictionaries?noredirect=1'),
(209, 0, 'https://stackoverflow.com/questions/141088/how-to-iterate-over-a-dictionary'),
(210, 0, 'https://stackoverflow.com/questions/209840/how-can-i-make-a-dictionary-from-separate-lists-of-keys-and-values'),
(211, 0, 'https://stackoverflow.com/questions/613183/how-do-i-sort-a-dictionary-by-value'),
(212, 0, 'https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary'),
(213, 0, 'https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory'),
(214, 0, 'https://stackoverflow.com/questions/5844672/delete-an-element-from-a-dictionary'),
(215, 0, 'https://stackoverflow.com/questions/11277432/how-can-i-remove-a-key-from-a-python-dictionary'),
(216, 0, 'https://stackoverflow.com/questions/19862116/how-to-merge-two-dictionaries-with-same-key-names?noredirect=1'),
(217, 0, 'https://stackoverflow.com/questions/37934439/add-number-then-tuple-to-list-as-a-tuple-but-it-drops-outer-tuple?noredirect=1'),
(218, 0, 'https://stackoverflow.com/questions/50296860/int-object-is-not-iterable-while-using-list-extend?noredirect=1'),
(219, 0, 'https://stackoverflow.com/questions/50309910/list-function-confusion?noredirect=1'),
(220, 0, 'https://stackoverflow.com/questions/60232743/iterate-through-a-list-and-split-into-a-1d-list?noredirect=1'),
(221, 0, 'https://stackoverflow.com/questions/37933837/copying-a-sublist-into-a-main-list-as-objects-instead-of-lists?noredirect=1'),
(222, 0, 'https://stackoverflow.com/questions/56423995/what-does-the-output-of-the-python-extend-function-mean?noredirect=1'),
(223, 0, 'https://stackoverflow.com/questions/43531363/python-list-extend-method-breaks-string-into-characters?noredirect=1'),
(224, 0, 'https://stackoverflow.com/questions/53112952/python-list-append-vs?noredirect=1'),
(225, 0, 'https://stackoverflow.com/questions/57486340/how-to-add-elements-of-a-list-by-element-to-a-tuple?noredirect=1'),
(226, 0, 'https://stackoverflow.com/questions/72899/how-do-i-sort-a-list-of-dictionaries-by-a-value-of-the-dictionary'),
(227, 0, 'https://stackoverflow.com/questions/136097/difference-between-staticmethod-and-classmethod'),
(228, 0, 'https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-in-a-list'),
(229, 0, 'https://stackoverflow.com/questions/312443/how-do-i-split-a-list-into-equally-sized-chunks'),
(230, 0, 'https://stackoverflow.com/questions/626759/whats-the-difference-between-lists-and-tuples'),
(231, 0, 'https://stackoverflow.com/questions/4706499/how-do-i-append-to-a-file'),
(232, 0, 'https://stackoverflow.com/questions/11520492/difference-between-del-remove-and-pop-on-lists'),
(233, 0, 'https://stackoverflow.com/questions/8744113/python-list-by-value-not-by-reference?noredirect=1'),
(234, 0, 'https://stackoverflow.com/questions/6532881/how-to-make-a-copy-of-a-2d-array-in-python?noredirect=1'),
(235, 0, 'https://stackoverflow.com/questions/184643/what-is-the-best-way-to-copy-a-list?noredirect=1'),
(236, 0, 'https://stackoverflow.com/questions/19951816/python-changes-to-my-copy-variable-affect-the-original-variable?noredirect=1'),
(237, 0, 'https://stackoverflow.com/questions/6793872/variable-assignment-and-modification-in-python?noredirect=1'),
(238, 0, 'https://stackoverflow.com/questions/29785084/changing-one-list-unexpectedly-changes-another-too?noredirect=1'),
(239, 0, 'https://stackoverflow.com/questions/8913026/list-copy-not-working?noredirect=1'),
(240, 0, 'https://stackoverflow.com/questions/40382487/copy-a-list-of-list-by-value-and-not-reference?noredirect=1'),
(241, 0, 'https://stackoverflow.com/questions/6612775/how-to-make-a-copy-of-a-list-of-objects-not-change-when-modifying-the-original-l?noredirect=1'),
(242, 0, 'https://stackoverflow.com/questions/19341365/setting-two-arrays-equal?noredirect=1'),
(243, 0, 'https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty'),
(244, 0, 'https://stackoverflow.com/questions/78536/deep-cloning-objects'),
(245, 0, 'https://stackoverflow.com/questions/728360/how-do-i-correctly-clone-a-javascript-object'),
(246, 0, 'https://stackoverflow.com/questions/930397/how-do-i-get-the-last-element-of-a-list'),
(247, 0, 'https://stackoverflow.com/questions/952914/how-do-i-make-a-flat-list-out-of-a-list-of-lists'),
(248, 0, 'https://stackoverflow.com/questions/3277503/how-to-read-a-file-line-by-line-into-a-list'),
(249, 0, 'https://stackoverflow.com/questions/11304895/how-do-i-copy-a-folder-from-remote-to-local-using-scp'),
(250, 0, 'https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas'),
(251, 0, 'https://stackoverflow.com/questions/40354399/what-is-pip-in-python?noredirect=1'),
(252, 0, 'https://stackoverflow.com/questions/35793489/how-to-use-pip-in-windows?noredirect=1'),
(253, 0, 'https://stackoverflow.com/questions/23191910/how-to-get-pip-for-python?noredirect=1'),
(254, 0, 'https://stackoverflow.com/questions/59240603/why-cant-i-use-pip-with-python-3-8?noredirect=1'),
(255, 0, 'https://stackoverflow.com/questions/53461665/problem-trying-to-install-pillow-5-3-0-for-python-3-7?noredirect=1'),
(256, 0, 'https://stackoverflow.com/questions/24159008/trying-to-install-and-use-pip?noredirect=1'),
(257, 0, 'https://stackoverflow.com/questions/67872762/unable-to-install-pip-using-python?noredirect=1'),
(258, 0, 'https://stackoverflow.com/questions/37409716/pip-is-not-recognized-as-an-internal-or-external-command-error-installing-mong?noredirect=1'),
(259, 0, 'https://stackoverflow.com/questions/45219237/trying-to-pip-install-django?noredirect=1'),
(260, 0, 'https://stackoverflow.com/questions/54349758/error-with-pip-install-no-moduel-named-pip-main?noredirect=1'),
(261, 0, 'https://stackoverflow.com/questions/22358/how-can-i-develop-for-iphone-using-a-windows-development-machine'),
(262, 0, 'https://stackoverflow.com/questions/2720014/how-to-upgrade-all-python-packages-with-pip'),
(263, 0, 'https://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula'),
(264, 0, 'https://stackoverflow.com/questions/5226311/installing-specific-package-version-with-pip'),
(265, 0, 'https://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block'),
(266, 0, 'https://stackoverflow.com/questions/6587507/how-to-install-pip-with-python-3'),
(267, 0, 'https://stackoverflow.com/questions/10214827/find-which-version-of-package-is-installed-with-pip'),
(268, 0, 'https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x'),
(269, 0, 'https://stackoverflow.com/questions/27885397/how-do-i-install-a-python-package-with-a-whl-file'),
(270, 0, 'https://stackoverflow.com/questions/600268/mkdir-p-functionality-in-python?noredirect=1'),
(271, 0, 'https://stackoverflow.com/questions/6004073/how-can-i-create-directories-recursively?noredirect=1'),
(272, 0, 'https://stackoverflow.com/questions/1274405/how-to-create-new-folder?noredirect=1'),
(273, 0, 'https://stackoverflow.com/questions/31008598/python-check-if-a-directory-exists-then-create-it-if-necessary-and-save-graph-t?noredirect=1'),
(274, 0, 'https://stackoverflow.com/questions/42817898/creating-a-new-folder-with-given-path?noredirect=1'),
(275, 0, 'https://stackoverflow.com/questions/21094467/creation-and-validation-of-directory-using-try-except-or-if-else?noredirect=1'),
(276, 0, 'https://stackoverflow.com/questions/28996509/create-folders-in-python-3-4?noredirect=1'),
(277, 0, 'https://stackoverflow.com/questions/52923575/check-if-a-file-already-exists-in-a-particular-folder?noredirect=1'),
(278, 0, 'https://stackoverflow.com/questions/68031776/possibility-of-adding-a-directory-in-python-nested?noredirect=1'),
(279, 0, 'https://stackoverflow.com/questions/68487080/python-fileexistserror-winerror-183-cannot-create-a-file-when-that-file-alrea?noredirect=1'),
(280, 0, 'https://stackoverflow.com/questions/59895/how-can-i-get-the-directory-where-a-bash-script-is-located-from-within-the-scrip'),
(281, 0, 'https://stackoverflow.com/questions/115983/how-can-i-add-a-blank-directory-to-a-git-repository'),
(282, 0, 'https://stackoverflow.com/questions/606191/convert-bytes-to-a-string'),
(283, 0, 'https://stackoverflow.com/questions/8933237/how-do-i-check-if-directory-exists-in-python'),
(284, 0, 'https://stackoverflow.com/questions/16956810/how-do-i-find-all-files-containing-specific-text-on-linux'),
(285, 0, 'https://stackoverflow.com/questions/47309094/importing-top-level-file-from-lower-level-file?noredirect=1'),
(286, 0, 'https://stackoverflow.com/questions/38101735/load-settings-file-from-parent-directory?noredirect=1'),
(287, 0, 'https://stackoverflow.com/questions/50072292/why-cant-i-import-class-from-parent-directory?noredirect=1'),
(288, 0, 'https://stackoverflow.com/questions/55883993/pythonic-way-to-manage-imports-of-objects-from-another-directory?noredirect=1'),
(289, 0, 'https://stackoverflow.com/questions/64087904/python-cant-import-a-module-that-ive-created-but-does-it-for-the-others?noredirect=1'),
(290, 0, 'https://stackoverflow.com/questions/64370687/sublime-text-3-build-ctrl-b?noredirect=1'),
(291, 0, 'https://stackoverflow.com/questions/70533044/modulenotfounderror-no-module-named-p?noredirect=1'),
(292, 0, 'https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory?noredirect=1'),
(293, 0, 'https://stackoverflow.com/questions/301134/how-to-import-a-module-given-its-name-as-string'),
(294, 0, 'https://stackoverflow.com/questions/678236/how-do-i-get-the-filename-without-the-extension-from-a-path-in-python'),
(295, 0, 'https://stackoverflow.com/questions/739993/how-do-i-get-a-list-of-locally-installed-python-modules'),
(296, 0, 'https://stackoverflow.com/questions/3740152/how-to-change-permissions-for-a-folder-and-its-subfolders-files-in-one-step'),
(297, 0, 'https://stackoverflow.com/questions/4383571/importing-files-from-different-folder'),
(298, 0, 'https://stackoverflow.com/questions/6996603/how-do-i-delete-a-file-or-folder-in-python'),
(299, 0, 'https://stackoverflow.com/questions/7106012/download-a-single-folder-or-directory-from-a-github-repo'),
(300, 0, 'https://stackoverflow.com/questions/17071871/how-do-i-select-rows-from-a-dataframe-based-on-column-values'),
(301, 0, 'https://stackoverflow.com/questions/36826839/python-relative-import-script-two-levels-up?noredirect=1'),
(302, 0, 'https://stackoverflow.com/questions/38231478/why-is-relative-path-not-working-in-python-tests?noredirect=1'),
(303, 0, 'https://stackoverflow.com/questions/68866134/how-to-get-autodoc-to-import-packages-that-are-locally-written?noredirect=1'),
(304, 0, 'https://stackoverflow.com/questions/60667735/vscode-import-files-from-other-folders?noredirect=1'),
(305, 0, 'https://stackoverflow.com/questions/39499893/celery-task-unable-to-import-importerror-of-a-module-from-inside-the-project?noredirect=1'),
(306, 0, 'https://stackoverflow.com/questions/34271766/module-importation-in-python3?noredirect=1'),
(307, 0, 'https://stackoverflow.com/questions/89228/how-do-i-execute-a-program-or-call-a-system-command'),
(308, 0, 'https://stackoverflow.com/questions/4906977/how-do-i-access-environment-variables-in-python'),
(309, 0, 'https://stackoverflow.com/questions/16981921/relative-imports-in-python-3?noredirect=1'),
(310, 0, 'https://stackoverflow.com/questions/306400/how-can-i-randomly-select-an-item-from-a-list'),
(311, 0, 'https://stackoverflow.com/questions/627435/how-to-remove-an-element-from-a-list-by-index'),
(312, 0, 'https://stackoverflow.com/questions/714063/importing-modules-from-parent-folder'),
(313, 0, 'https://stackoverflow.com/questions/1450393/how-do-i-read-from-stdin'),
(314, 0, 'https://stackoverflow.com/questions/13411544/delete-a-column-from-a-pandas-dataframe'),
(315, 0, 'https://stackoverflow.com/questions/53602180/custom-modules-import-without-typing-folder-name?noredirect=1'),
(316, 0, 'https://stackoverflow.com/questions/22495723/python-3-sys-path-doesnt-work-how-to-permenantly-append-a-path?noredirect=1'),
(317, 0, 'https://stackoverflow.com/questions/67631/how-do-i-import-a-module-given-the-full-path?noredirect=1'),
(318, 0, 'https://stackoverflow.com/questions/2518127/how-to-reload-bashrc-settings-without-logging-out-and-back-in-again?noredirect=1'),
(319, 0, 'https://stackoverflow.com/questions/25215102/installing-opencv-for-python-on-ubuntu-getting-importerror-no-module-named-cv2?noredirect=1'),
(320, 0, 'https://stackoverflow.com/questions/36827962/pep8-import-not-at-top-of-file-with-sys-path?noredirect=1'),
(321, 0, 'https://stackoverflow.com/questions/135035/python-library-path?noredirect=1'),
(322, 0, 'https://stackoverflow.com/questions/13254047/module-name-different-than-directory-name?noredirect=1'),
(323, 0, 'https://stackoverflow.com/questions/19029333/how-to-check-that-the-anaconda-package-was-properly-installed?noredirect=1'),
(324, 0, 'https://stackoverflow.com/questions/26251030/how-to-use-wxpython-for-python-3?noredirect=1'),
(325, 0, 'https://stackoverflow.com/questions/22676/how-to-download-a-file-over-http'),
(326, 0, 'https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument'),
(327, 0, 'https://stackoverflow.com/questions/1896918/running-unittest-with-typical-test-directory-structure'),
(328, 0, 'https://stackoverflow.com/questions/9546324/adding-a-directory-to-the-path-environment-variable-in-windows'),
(329, 0, 'https://stackoverflow.com/questions/456481/cant-get-python-to-import-from-a-different-folder?noredirect=1'),
(330, 0, 'https://stackoverflow.com/questions/8951255/import-script-from-a-parent-directory?noredirect=1'),
(331, 0, 'https://stackoverflow.com/questions/49129300/python-submodule-importing-madness?noredirect=1'),
(332, 0, 'https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory'),
(333, 0, 'https://stackoverflow.com/questions/710551/use-import-module-or-from-module-import'),
(334, 0, 'https://stackoverflow.com/questions/4142151/how-to-import-the-class-within-the-same-directory-or-sub-directory'),
(335, 0, 'https://stackoverflow.com/questions/7225900/how-can-i-install-packages-using-pip-according-to-the-requirements-txt-file-from'),
(336, 0, 'https://stackoverflow.com/questions/1739924/python-reload-component-y-imported-with-from-x-import-y'),
(337, 0, 'https://stackoverflow.com/questions/2967194/open-in-python-does-not-create-a-file-if-it-doesnt-exist'),
(338, 0, 'https://stackoverflow.com/questions/6392739/what-does-the-at-symbol-do-in-python'),
(339, 0, 'https://stackoverflow.com/questions/14262433/large-data-workflows-using-pandas'),
(340, 0, 'https://stackoverflow.com/questions/20906474/import-multiple-csv-files-into-pandas-and-concatenate-into-one-dataframe'),
(341, 0, 'https://stackoverflow.com/questions/54063285/numpy-is-already-installed-with-anaconda-but-i-get-an-importerror-dll-load-fail'),
(342, 0, 'https://stackoverflow.com/questions/66303974/why-do-i-have-to-import-a-library-twice-in-python-idle-and-the-imported-file'),
(343, 0, 'https://stackoverflow.com/questions/338768/python-error-importerror-no-module-named'),
(344, 0, 'https://stackoverflow.com/questions/9252543/importerror-cannot-import-name-x'),
(345, 0, 'https://stackoverflow.com/questions/54665842/when-importing-tensorflow-i-get-the-following-error-no-module-named-numpy-cor'),
(346, 0, 'https://stackoverflow.com/questions/68418041/how-to-avoid-circular-reference-when-importing-modules-for-unittest-in-flask-app?noredirect=1'),
(347, 0, 'https://stackoverflow.com/questions/36429353/flask-directory-structure'),
(348, 0, 'https://stackoverflow.com/questions/48718768/how-to-avoid-circular-imports-in-a-flask-app-with-flask-sqlalchemy-models'),
(349, 0, 'https://stackoverflow.com/questions/57135973/flask-error-from-app-import-views-importerror-cannot-import-name-views'),
(350, 0, 'https://stackoverflow.com/questions/57763553/in-my-simple-flask-app-im-unable-to-import-classes-from-models-py-circular-im'),
(351, 0, 'https://stackoverflow.com/questions/59504949/how-should-i-run-flask-server-with-socketio'),
(352, 0, 'https://stackoverflow.com/questions/36932/how-can-i-represent-an-enum-in-python'),
(353, 0, 'https://stackoverflow.com/questions/230751/how-can-i-flush-the-output-of-the-print-function'),
(354, 0, 'https://stackoverflow.com/questions/10675054/how-to-import-a-module-in-python-with-importlib-import-module'),
(355, 0, 'https://stackoverflow.com/questions/65760786/how-to-import-in-python-3');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answers`
--
ALTER TABLE `answers`
  ADD PRIMARY KEY (`id`),
  ADD KEY `question_id_index` (`question_id`),
  ADD KEY `question_id` (`question_id`);

--
-- Indexes for table `code`
--
ALTER TABLE `code`
  ADD PRIMARY KEY (`id`),
  ADD KEY `answer_id` (`answer_id`);

--
-- Indexes for table `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `related_answer`
--
ALTER TABLE `related_answer`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `answers`
--
ALTER TABLE `answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=287;

--
-- AUTO_INCREMENT for table `code`
--
ALTER TABLE `code`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=584;

--
-- AUTO_INCREMENT for table `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=30;

--
-- AUTO_INCREMENT for table `related_answer`
--
ALTER TABLE `related_answer`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=356;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
